{
    "openapi": "3.0.0",
    "info": {
        "version": "3.0",
        "title": "Aspose.Tasks Cloud API Reference",
        "description": "",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "http:\/\/api.aspose.cloud\/v3.0"
    ],
    "paths": {
        "\/tasks\/{name}\/assignments": {
            "get": {
                "summary": "Get project's assignment items.",
                "description": "",
                "operationId": "GetAssignments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new assignment to a project and returns assignment item in a response.",
                "description": "",
                "operationId": "PostAssignment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "query",
                        "description": "The unique id of the task to be assigned."
                    },
                    {
                        "name": "resourceUid",
                        "in": "query",
                        "description": "The unique id of the resource to be assigned."
                    },
                    {
                        "name": "units",
                        "in": "query",
                        "description": "The units for the new assignment. Default value is 1."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/assignments\/{assignmentUid}": {
            "get": {
                "summary": "Read project assignment with the specified Uid.",
                "description": "",
                "operationId": "GetAssignment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "assignmentUid",
                        "in": "path",
                        "description": "Assignment Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a project assignment with all references to it.",
                "description": "",
                "operationId": "DeleteAssignment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "assignmentUid",
                        "in": "path",
                        "description": "Assignment Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates resources assignment with the specified Uid.",
                "description": "",
                "operationId": "PutAssignment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "assignmentUid",
                        "in": "path",
                        "description": "Assignment Uid"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Projects calculation mode"
                    },
                    {
                        "name": "recalculate",
                        "in": "query",
                        "description": "boolean value"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/assignments\/{assignmentUid}\/timeScaleData": {
            "get": {
                "summary": "Get timescaled data for an assignment with the specified Uid.",
                "description": "",
                "operationId": "GetAssignmentTimephasedData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "assignmentUid",
                        "in": "path",
                        "description": "Assignment Uid"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of timephased data to get."
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date."
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/calendars": {
            "get": {
                "summary": "Read project calendar items.",
                "description": "",
                "operationId": "GetCalendars",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new calendar to project file.",
                "description": "",
                "operationId": "PostCalendar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Edits an existing project calendar.",
                "description": "",
                "operationId": "PutCalendar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "query",
                        "description": "The Uid of an existing calendar to edit."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/calendars\/{calendarUid}": {
            "get": {
                "summary": "Get a project's calendar with the specified Uid.",
                "description": "",
                "operationId": "GetCalendar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a project calendar",
                "description": "",
                "operationId": "DeleteCalendar",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/calendars\/{calendarUid}\/calendarExceptions": {
            "get": {
                "summary": "Get a list of calendar's exceptions.",
                "description": "",
                "operationId": "GetCalendarExceptions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new calendar exception to a calendar.",
                "description": "",
                "operationId": "PostCalendarException",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/calendars\/{calendarUid}\/calendarExceptions\/{index}": {
            "put": {
                "summary": "Updates calendar exception.",
                "description": "",
                "operationId": "PutCalendarException",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes calendar exception from calendar exceptions collection.",
                "description": "",
                "operationId": "DeleteCalendarException",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/calendars\/{calendarUid}\/workWeeks": {
            "get": {
                "summary": "Gets the collection of work weeks of the specified calendar.",
                "description": "",
                "operationId": "GetCalendarWorkWeeks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "calendarUid",
                        "in": "path",
                        "description": "Calendars Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/criticalPath": {
            "get": {
                "summary": "Returns the list of the tasks which must be completed on time for a project to finish on schedule. Each task of the project is represented as a task item here, which is light-weighted task representation of the project task..",
                "description": "",
                "operationId": "GetCriticalPath",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}": {
            "get": {
                "summary": "Get a project document.",
                "description": "",
                "operationId": "GetTaskDocument",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/format": {
            "get": {
                "summary": "Get a project document in the specified format",
                "description": "",
                "operationId": "GetTaskDocumentWithFormat",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format of the resulting file."
                    },
                    {
                        "name": "returnAsZipArchive",
                        "in": "query",
                        "description": "If parameter is true, HTML resources are included as separate files and returned along with the resulting html file as a zip package."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Get a project document in the specified format and with the specified save options.",
                "description": "",
                "operationId": "PostTaskDocumentWithFormat",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format of the resulting file."
                    },
                    {
                        "name": "returnAsZipArchive",
                        "in": "query",
                        "description": "If parameter is true, HTML resources are included as separate files and returned along with the resulting html file as a zip package."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/projectids": {
            "get": {
                "summary": "Get Uids of projects contained in the file.",
                "description": "",
                "operationId": "GetProjectIds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/pagecount": {
            "get": {
                "summary": "Returns page count for the project to be rendered using given Timescale and PresentationFormat \nor specified PageSize.",
                "description": "",
                "operationId": "GetPageCount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "PageSize to get page count for."
                    },
                    {
                        "name": "presentationFormat",
                        "in": "query",
                        "description": "PresentationFormat to get page count for."
                    },
                    {
                        "name": "timescale",
                        "in": "query",
                        "description": "Timescale to get page count for."
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date."
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/import": {
            "put": {
                "summary": "Imports project from primavera db formats (Primavera SQLite .db or Primavera xml) and saves it to specified file with the specified format.",
                "description": "",
                "operationId": "PutImportProjectFromFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "projectUid",
                        "in": "query",
                        "description": "Uid of the project to import."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "fileType",
                        "in": "query",
                        "description": "The type of file to import. The supported values are (PrimaveraSqliteDb, PrimaveraXml)."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "outputFileFormat",
                        "in": "query",
                        "description": "The format of the resulting file."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/importfromdb": {
            "put": {
                "summary": "Imports project from database with the specified connection string and saves it to specified file with the specified format.",
                "description": "",
                "operationId": "PutImportProjectFromDb",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "databaseType",
                        "in": "query",
                        "description": "The type of source database. The supported values are (Msp, Mpd, Primavera)."
                    },
                    {
                        "name": "projectUid",
                        "in": "query",
                        "description": "Uid of the project to import."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format of the resulting file."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "databaseSchema",
                        "in": "query",
                        "description": "Schema of Microsoft project database (if applicable)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/importfromprojectonline": {
            "put": {
                "summary": "Imports project from Project Online and saves it to specified file.",
                "description": "",
                "operationId": "PutImportProjectFromProjectOnline",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "siteUrl",
                        "in": "query",
                        "description": "The url of sharepoint site. For example, \"https:\/\/your_company_name.sharepoint.com\""
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The format of the resulting file."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/documentproperties": {
            "get": {
                "summary": "Get a collection of a project's document properties.",
                "description": "",
                "operationId": "GetDocumentProperties",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/documentproperties\/{propertyName}": {
            "get": {
                "summary": "Get a document property by name.",
                "description": "",
                "operationId": "GetDocumentProperty",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "propertyName",
                        "in": "path",
                        "description": "The property name."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Set\/create document property.",
                "description": "",
                "operationId": "PutDocumentProperty",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "propertyName",
                        "in": "path",
                        "description": "The property name."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Set\/create document property.",
                "description": "",
                "operationId": "PostDocumentProperty",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "propertyName",
                        "in": "path",
                        "description": "The property name."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/extendedAttributes": {
            "get": {
                "summary": "Get a project's extended attributes.",
                "description": "",
                "operationId": "GetExtendedAttributes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Add a new extended attribute definition to a project or \nupdates existing attribute definition (with the same FieldId).",
                "description": "",
                "operationId": "PutExtendedAttribute",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/extendedAttributes\/{index}": {
            "get": {
                "summary": "Get a project extended attribute definition with the specified index.",
                "description": "",
                "operationId": "GetExtendedAttributeByIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a project extended attribute.",
                "description": "",
                "operationId": "DeleteExtendedAttributeByIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/outlineCodes": {
            "get": {
                "summary": "Get a project's outline codes.",
                "description": "",
                "operationId": "GetOutlineCodes",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/outlineCodes\/{index}": {
            "get": {
                "summary": "Get outline code by index.",
                "description": "",
                "operationId": "GetOutlineCodeByIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a project outline code",
                "description": "",
                "operationId": "DeleteOutlineCodeByIndex",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/projectOnline\/projectList": {
            "get": {
                "summary": "Gets the list of published projects in the current Project Online account.",
                "description": "",
                "operationId": "GetProjectList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "siteUrl",
                        "in": "query",
                        "description": "The url of sharepoint site. For example, \"https:\/\/your_company_name.sharepoint.com\""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/recalculate\/project": {
            "put": {
                "summary": "Reschedules all project tasks ids, outline levels, start\/finish dates, sets early\/late dates, calculates slacks, work and cost fields.",
                "description": "",
                "operationId": "PutRecalculateProject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Projects calculation mode"
                    },
                    {
                        "name": "validate",
                        "in": "query",
                        "description": "If true the validation of recalculation will be performed. What data is validated:     At the moment only basic validation of task and task link date ranges is implemented.     Tasks date ranges (e.g. ActualStart - ActualFinish, EarlyStart - EarlyFinish, etc.) as well as Task Links dates will be checked against the date criteria that start date is less or equal than finish date."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/recalculate\/projectWorkAsComplete": {
            "put": {
                "summary": "Recalculate project work as complete ",
                "description": "",
                "operationId": "PutRecalculateProjectWorkAsComplete",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "setZeroOrHundredPercentCompleteOnly",
                        "in": "query",
                        "description": "boolean value"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/recalculate\/uncompleteWorkToStartAfter": {
            "put": {
                "summary": "Recalculate project uncomplete work",
                "description": "",
                "operationId": "PutRecalculateProjectUncompleteWorkToStartAfter",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/recalculate\/resourceFields": {
            "put": {
                "summary": "Recalculate project resource fields",
                "description": "",
                "operationId": "PutRecalculateProjectResourceFields",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/report": {
            "get": {
                "summary": "Returns created report in PDF format.",
                "description": "",
                "operationId": "GetReportPdf",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of timephased data to get."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/resources": {
            "get": {
                "summary": "Get a project's resources.",
                "description": "",
                "operationId": "GetResources",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new resource to a project.",
                "description": "",
                "operationId": "PostResource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceName",
                        "in": "query",
                        "description": "The name of the new resource. The default value is an empty string"
                    },
                    {
                        "name": "beforeResourceId",
                        "in": "query",
                        "description": "The id of the resource to insert the new resource before. The default value is the id of the last resource in a project file."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/resources\/{resourceUid}": {
            "get": {
                "summary": "Get project resource.",
                "description": "",
                "operationId": "GetResource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceUid",
                        "in": "path",
                        "description": "Resource Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates resource with the specified Uid",
                "description": "",
                "operationId": "PutResource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceUid",
                        "in": "path",
                        "description": "Resource Uid"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Projects calculation mode"
                    },
                    {
                        "name": "recalculate",
                        "in": "query",
                        "description": "boolean value"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a project resource with all references to it",
                "description": "",
                "operationId": "DeleteResource",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceUid",
                        "in": "path",
                        "description": "Resource Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/resources\/{resourceUid}\/assignments": {
            "get": {
                "summary": "Get resource's assignments.",
                "description": "",
                "operationId": "GetResourceAssignments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceUid",
                        "in": "path",
                        "description": "Resource Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/resources\/{resourceUid}\/timeScaleData": {
            "get": {
                "summary": "Get timescaled data for a resource with the specified Uid.",
                "description": "",
                "operationId": "GetResourceTimephasedData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "resourceUid",
                        "in": "path",
                        "description": "Resource Uid"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of timephased data to get."
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date."
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/riskAnalysisReport": {
            "get": {
                "summary": "Performs a risk analysys using Monte Carlo simulation and creates a risk analysis report.",
                "description": "",
                "operationId": "GetRiskAnalysisReport",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "query",
                        "description": "The unique id of the task to be assigned."
                    },
                    {
                        "name": "distributionType",
                        "in": "query",
                        "description": "Gets or sets the probability distribution used in Monte Carlo simulation. The default value is ProbabilityDistributionType.Normal."
                    },
                    {
                        "name": "optimistic",
                        "in": "query",
                        "description": "The percentage of the most likely task duration which can happen in the best possible project scenario. The default value is 75, which means that if the estimated specified task duration is 4 days then the optimistic duration will be 3 days."
                    },
                    {
                        "name": "pessimistic",
                        "in": "query",
                        "description": "The percentage of the most likely task duration which can happen in the worst possible project scenario. The default value is 125, which means that if the estimated specified task duration is 4 days then the pessimistic duration will be 5 days."
                    },
                    {
                        "name": "confidenceLevel",
                        "in": "query",
                        "description": "Gets or sets the confidence level that correspond to the percentage of the time the actual generated values will be within optimistic and pessimistic estimates. The default value is CL99."
                    },
                    {
                        "name": "iterations",
                        "in": "query",
                        "description": "The number of iterations to use in Monte Carlo simulation. The default value is 100."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks": {
            "get": {
                "summary": "Get a project's tasks.",
                "description": "",
                "operationId": "GetTasks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new task to a project.",
                "description": "",
                "operationId": "PostTask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskName",
                        "in": "query",
                        "description": "The name of the new task. The default value is an empty string"
                    },
                    {
                        "name": "beforeTaskId",
                        "in": "query",
                        "description": "The id of the task to insert the new task before.              The default value is the id of the last task in a project file."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}": {
            "get": {
                "summary": "Read project task.",
                "description": "",
                "operationId": "GetTask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes a project task with all references to it and rebuilds tasks tree.",
                "description": "",
                "operationId": "DeleteTask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates special task getting by task UID",
                "description": "",
                "operationId": "PutTask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": "Projects calculation mode"
                    },
                    {
                        "name": "recalculate",
                        "in": "query",
                        "description": "boolean value"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}\/assignments": {
            "get": {
                "summary": "Get task assignments.",
                "description": "",
                "operationId": "GetTaskAssignments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}\/timeScaleData": {
            "get": {
                "summary": "Get timescaled data for a task with the specified Uid.",
                "description": "",
                "operationId": "GetTaskTimephasedData",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of timephased data to get."
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date."
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}\/recurringInfo": {
            "get": {
                "summary": "Get recurring info for a task with the specified Uid",
                "description": "",
                "operationId": "GetTaskRecurringInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates existing task's recurring info. Note that task should be already recurring.",
                "description": "",
                "operationId": "PutTaskRecurringInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/recurringInfo": {
            "post": {
                "summary": "Adds a new recurring task.",
                "description": "",
                "operationId": "PostTaskRecurringInfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "parentTaskUid",
                        "in": "query",
                        "description": "The Uid of parent task for the created recurring task"
                    },
                    {
                        "name": "taskName",
                        "in": "query",
                        "description": "The name of the new task. The default value is an empty string"
                    },
                    {
                        "name": "calendarName",
                        "in": "query",
                        "description": "Name of the projects calendar to use for recurring tasks scheduling."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}\/move": {
            "put": {
                "summary": "Move one task to another parent task",
                "description": "",
                "operationId": "PutMoveTask",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "parentTaskUid",
                        "in": "query",
                        "description": "The Uid of parent task for the created recurring task"
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/tasks\/{taskUid}\/moveToSibling": {
            "put": {
                "summary": "Move a task to another position under the same parent and the same outline level",
                "description": "",
                "operationId": "PutMoveTaskToSibling",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "taskUid",
                        "in": "path",
                        "description": "Task Uid"
                    },
                    {
                        "name": "beforeTaskUid",
                        "in": "query",
                        "description": "Unique Id of the task after which the current task will be placed."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/taskLinks": {
            "get": {
                "summary": "Get tasks' links of a project.",
                "description": "",
                "operationId": "GetTaskLinks",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new task link to a project.",
                "description": "",
                "operationId": "PostTaskLink",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/taskLinks\/{index}": {
            "put": {
                "summary": "Updates existing task link.",
                "description": "",
                "operationId": "PutTaskLink",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete task link.",
                "description": "",
                "operationId": "DeleteTaskLink",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "description": "Index of the calendar exception. See CalendarException.Index property."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/vbaproject": {
            "get": {
                "summary": "Returns VBA project.",
                "description": "",
                "operationId": "GetVbaProject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/wbsDefinition": {
            "get": {
                "summary": "Get a project's WBS Definition.",
                "description": "",
                "operationId": "GetWbsDefinition",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/{name}\/renumberWbsCode": {
            "put": {
                "summary": "Renumber WBS code of passed tasks (if specified) or all project's tasks.",
                "description": "",
                "operationId": "PutRenumberWbsCode",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the file."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "The document storage."
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "description": "The name of the project document to save changes to. If this parameter is omitted then the changes will be saved to the source project document."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "The document folder."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/file\/{path}": {
            "get": {
                "summary": "Download file",
                "description": "",
                "operationId": "DownloadFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Upload file",
                "description": "",
                "operationId": "UploadFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "File",
                        "in": "formData",
                        "description": "File to upload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete file",
                "description": "",
                "operationId": "DeleteFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/file\/copy\/{srcPath}": {
            "put": {
                "summary": "Copy file",
                "description": "",
                "operationId": "CopyFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/file\/move\/{srcPath}": {
            "put": {
                "summary": "Move file",
                "description": "",
                "operationId": "MoveFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/folder\/{path}": {
            "get": {
                "summary": "Get all files and folders within a folder",
                "description": "",
                "operationId": "GetFilesList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create the folder",
                "description": "",
                "operationId": "CreateFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete folder",
                "description": "",
                "operationId": "DeleteFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "recursive",
                        "in": "query",
                        "description": "Enable to delete folders, subfolders and files"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/folder\/copy\/{srcPath}": {
            "put": {
                "summary": "Copy folder",
                "description": "",
                "operationId": "CopyFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/folder\/move\/{srcPath}": {
            "put": {
                "summary": "Move folder",
                "description": "",
                "operationId": "MoveFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/{storageName}\/exist": {
            "get": {
                "summary": "Check if storage exists",
                "description": "",
                "operationId": "StorageExists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storageName",
                        "in": "path",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/exist\/{path}": {
            "get": {
                "summary": "Check if file or folder exists",
                "description": "",
                "operationId": "ObjectExists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/disc": {
            "get": {
                "summary": "Get disc usage",
                "description": "",
                "operationId": "GetDiscUsage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/tasks\/storage\/version\/{path}": {
            "get": {
                "summary": "Get file versions",
                "description": "",
                "operationId": "GetFileVersions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON\/XML representation of a project assignment items. Each assignment item has a link to get full assignment representation in the project.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/AssignmentItemsResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AssignmentItemsResponse": {
                "type": "object"
            },
            "AssignmentItems": {
                "type": "object"
            },
            "AssignmentItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "taskUid": {
                        "description": "Uid of the task.",
                        "type": "integer"
                    },
                    "resourceUid": {
                        "description": "Uid of the resource.",
                        "type": "integer"
                    }
                }
            },
            "link": {
                "type": "object",
                "properties": {
                    "href": {
                        "description": "The \"href\" attribute contains the link's IRI. atom:link elements MUST\nhave an href attribute, whose value MUST be a IRI reference",
                        "type": "string"
                    },
                    "rel": {
                        "description": "atom:link elements MAY have a \"rel\" attribute that indicates the link\nrelation type.  If the \"rel\" attribute is not present, the link\nelement MUST be interpreted as if the link relation type is \"alternate\".",
                        "type": "string"
                    },
                    "type": {
                        "description": "On the link element, the \"type\" attribute's value is an advisory\nmedia type: it is a hint about the type of the representation that is\nexpected to be returned when the value of the href attribute is\ndereferenced.  Note that the type attribute does not override the\nactual media type returned with the representation.",
                        "type": "string"
                    },
                    "title": {
                        "description": "The \"title\" attribute conveys human-readable information about the\nlink.  The content of the \"title\" attribute is Language-Sensitive.",
                        "type": "string"
                    }
                }
            },
            "LinkElement": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "AsposeResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Response status code",
                        "type": "integer"
                    },
                    "status": {
                        "description": "Response status",
                        "type": "string"
                    }
                }
            },
            "AssignmentItemResponse": {
                "type": "object"
            },
            "AssignmentResponse": {
                "type": "object"
            },
            "ResourceAssignment": {
                "type": "object",
                "properties": {
                    "taskUid": {
                        "description": "Uid of the task.",
                        "type": "integer"
                    },
                    "resourceUid": {
                        "description": "Uid of the resource.",
                        "type": "integer"
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "percentWorkComplete": {
                        "description": "Returns or sets the amount of a work completed on an assignment.",
                        "type": "integer"
                    },
                    "actualCost": {
                        "description": "Returns or sets the actual cost incurred on an assignment.",
                        "type": "number"
                    },
                    "actualFinish": {
                        "description": "Returns or sets the actual finish date of an assignment.",
                        "type": "string"
                    },
                    "actualOvertimeCost": {
                        "description": "Returns or sets the actual overtime cost incurred on an assignment.",
                        "type": "number"
                    },
                    "actualOvertimeWork": {
                        "description": "Returns or sets the actual amount of an overtime work incurred on an assignment.",
                        "type": "string"
                    },
                    "actualStart": {
                        "description": "Returns or sets the actual start date of an assignment.",
                        "type": "string"
                    },
                    "actualWork": {
                        "description": "Returns or sets the actual amount of a work incurred on an assignment.",
                        "type": "string"
                    },
                    "acwp": {
                        "description": "Returns or sets the actual cost of a work performed on an assignment to-date.",
                        "type": "number"
                    },
                    "confirmed": {
                        "description": "Determines whether a resource has accepted all of its assignments.",
                        "type": "boolean"
                    },
                    "cost": {
                        "description": "Returns or sets the projected or scheduled cost of an assignment.",
                        "type": "number"
                    },
                    "costRateTableType": {
                        "description": "Returns or sets the cost rate table used for this assignment.",
                        "type": ""
                    },
                    "costVariance": {
                        "description": "Returns or sets the difference between the cost and baseline cost of a resource.",
                        "type": "number"
                    },
                    "cv": {
                        "description": "Returns or sets the earned value cost variance.",
                        "type": "number"
                    },
                    "delay": {
                        "description": "Returns or sets the delay of an assignment.",
                        "type": "integer"
                    },
                    "finish": {
                        "description": "Returns or sets the scheduled finish date of an assignment.",
                        "type": "string"
                    },
                    "finishVariance": {
                        "description": "Returns or sets the variance of an assignment finish date from a baseline finish date.",
                        "type": "integer"
                    },
                    "hyperlink": {
                        "description": "Returns or sets the title of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkAddress": {
                        "description": "Returns or sets the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkSubAddress": {
                        "description": "Returns or sets the document bookmark of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "workVariance": {
                        "description": "Returns or sets the variance of an assignment work from the baseline work as minutes.",
                        "type": "number"
                    },
                    "hasFixedRateUnits": {
                        "description": "Determines whether the Units have Fixed Rate.",
                        "type": "boolean"
                    },
                    "fixedMaterial": {
                        "description": "Determines whether the consumption of an assigned material resource occurs in a single, fixed amount.",
                        "type": "boolean"
                    },
                    "levelingDelay": {
                        "description": "Returns or sets the delay caused by leveling.",
                        "type": "integer"
                    },
                    "levelingDelayFormat": {
                        "description": "Returns or sets the duration format of a delay.",
                        "type": ""
                    },
                    "linkedFields": {
                        "description": "Determines whether the Project is linked to another OLE object.",
                        "type": "boolean"
                    },
                    "milestone": {
                        "description": "Determines whether the assignment is a milestone.",
                        "type": "boolean"
                    },
                    "notes": {
                        "description": "Returns or sets the text notes associated with an assignment.",
                        "type": "string"
                    },
                    "overallocated": {
                        "description": "Determines whether the assignment is overallocated.",
                        "type": "boolean"
                    },
                    "overtimeCost": {
                        "description": "Returns or sets the sum of the actual and remaining overtime cost of an assignment.",
                        "type": "number"
                    },
                    "overtimeWork": {
                        "description": "Returns or sets the scheduled overtime work of an assignment.",
                        "type": "string"
                    },
                    "peakUnits": {
                        "description": "Returns or sets the largest number of a resource's units assigned to a task.",
                        "type": "number"
                    },
                    "regularWork": {
                        "description": "Returns or sets the amount of a non-overtime work scheduled for an assignment.",
                        "type": "string"
                    },
                    "remainingCost": {
                        "description": "Returns or sets the remaining projected cost of completing an assignment.",
                        "type": "number"
                    },
                    "remainingOvertimeCost": {
                        "description": "Returns or sets the remaining projected overtime cost of completing an assignment.",
                        "type": "number"
                    },
                    "remainingOvertimeWork": {
                        "description": "Returns or sets the remaining overtime work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "remainingWork": {
                        "description": "Returns or sets the remaining work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "responsePending": {
                        "description": "Determines whether the response has been received for a TeamAssign message.",
                        "type": "boolean"
                    },
                    "start": {
                        "description": "Returns or sets the scheduled start date of an assignment.",
                        "type": "string"
                    },
                    "stop": {
                        "description": "Returns or sets the date when assignment is stopped.",
                        "type": "string"
                    },
                    "resume": {
                        "description": "Returns or sets the date when assignment is resumed.",
                        "type": "string"
                    },
                    "startVariance": {
                        "description": "Returns or sets the variance of an assignment start date from a baseline start date.",
                        "type": "integer"
                    },
                    "summary": {
                        "description": "Determines whether the task is a summary task.",
                        "type": "boolean"
                    },
                    "sv": {
                        "description": "Returns or sets the earned value schedule variance, through the project status date.",
                        "type": "number"
                    },
                    "units": {
                        "description": "Returns or sets the number of units for an assignment.",
                        "type": "number"
                    },
                    "updateNeeded": {
                        "description": "Determines whether the resource assigned to a task needs to be updated as to the status of the task.",
                        "type": "boolean"
                    },
                    "vac": {
                        "description": "Returns or sets the difference between basline cost and total cost.\nRead\/write Double.",
                        "type": "number"
                    },
                    "work": {
                        "description": "Returns or sets the amount of scheduled work for an assignment.\nRead\/write TimeSpan.",
                        "type": "string"
                    },
                    "workContour": {
                        "description": "Returns or sets the work contour of an assignment.",
                        "type": ""
                    },
                    "bcws": {
                        "description": "Returns or sets the budgeted cost of a work on assignment.",
                        "type": "number"
                    },
                    "bcwp": {
                        "description": "Returns or sets the budgeted cost of a work performed on assignment to-date.",
                        "type": "number"
                    },
                    "bookingType": {
                        "description": "Returns or sets the booking type of an assignment.",
                        "type": ""
                    },
                    "actualWorkProtected": {
                        "description": "Returns or sets the duration through which actual work is protected.",
                        "type": "string"
                    },
                    "actualOvertimeWorkProtected": {
                        "description": "Returns or sets the duration through which actual overtime work is protected.",
                        "type": "string"
                    },
                    "creationDate": {
                        "description": "Returns or sets the date that the assignment was created.",
                        "type": "string"
                    },
                    "assnOwner": {
                        "description": "Returns or sets the name of an assignment owner.",
                        "type": "string"
                    },
                    "assnOwnerGuid": {
                        "description": "Returns or sets the Guid of an assignment owner.",
                        "type": "string"
                    },
                    "budgetCost": {
                        "description": "Returns or sets the budgeted cost of resources on an assignment.",
                        "type": "number"
                    },
                    "budgetWork": {
                        "description": "Returns or sets the budgeted work amount for a work or material resources on an assignment.",
                        "type": "string"
                    },
                    "rateScale": {
                        "description": "Returns the time unit for the usage rate of the material resource assignment.",
                        "type": ""
                    },
                    "baselines": {
                        "description": "List of ResourceAssignment's Baseline values.",
                        "type": "array"
                    },
                    "extendedAttributes": {
                        "description": "ResourceAssignment extended attributes.",
                        "type": "array"
                    }
                }
            },
            "costRateTableType": {
                "type": "object"
            },
            "levelingDelayFormat": {
                "type": "object"
            },
            "workContour": {
                "type": "object"
            },
            "bookingType": {
                "type": "object"
            },
            "rateScale": {
                "type": "object"
            },
            "baselines": {
                "type": "array"
            },
            "extendedAttributes": {
                "type": "array"
            },
            "AssignmentBaseline": {
                "type": "object"
            },
            "Baseline": {
                "type": "object",
                "properties": {
                    "baselineNumber": {
                        "description": "The unique number of a baseline data record.",
                        "type": ""
                    },
                    "work": {
                        "description": "Returns or sets the amount of scheduled work for an assignment.\nRead\/write TimeSpan.",
                        "type": "string"
                    },
                    "cost": {
                        "description": "Returns or sets the projected or scheduled cost of an assignment.",
                        "type": "number"
                    },
                    "bcws": {
                        "description": "Returns or sets the budgeted cost of a work on assignment.",
                        "type": "number"
                    },
                    "bcwp": {
                        "description": "Returns or sets the budgeted cost of a work performed on assignment to-date.",
                        "type": "number"
                    }
                }
            },
            "baselineNumber": {
                "type": "object"
            },
            "ExtendedAttribute": {
                "type": "object",
                "properties": {
                    "fieldId": {
                        "description": "Gets or sets the id of a field.",
                        "type": "string"
                    },
                    "attributeType": {
                        "description": "Gets the type of a custom field.",
                        "type": ""
                    },
                    "valueGuid": {
                        "description": "Gets or sets the guid of a value.",
                        "type": "string"
                    },
                    "lookupValueId": {
                        "description": "Gets or sets Id of the lookup value (if value is lookup value)",
                        "type": "integer"
                    },
                    "durationValue": {
                        "description": "Gets or sets value for attributes with 'Duration' type.",
                        "type": ""
                    },
                    "numericValue": {
                        "description": "Gets or sets a value for attributes with numeric types (Cost, Number).",
                        "type": "number"
                    },
                    "dateValue": {
                        "description": "Gets or sets a value for attributes with date types (Date, Start, Finish).",
                        "type": "string"
                    },
                    "flagValue": {
                        "description": "Gets or sets a value indicating whether a flag is set for an attribute with 'Flag' type.",
                        "type": "boolean"
                    },
                    "textValue": {
                        "description": "Gets or sets a value for attributes with 'Text' type.",
                        "type": "string"
                    }
                }
            },
            "attributeType": {
                "type": "object"
            },
            "durationValue": {
                "type": "object"
            },
            "Duration": {
                "type": "object",
                "properties": {
                    "timeSpan": {
                        "description": "Gets or sets the time interval of duration.",
                        "type": "string"
                    },
                    "timeUnit": {
                        "description": "Gets or sets the time units which will be used to display duration in MS Project.",
                        "type": ""
                    }
                }
            },
            "timeUnit": {
                "type": "object"
            },
            "TimephasedDataResponse": {
                "type": "object"
            },
            "TimephasedData": {
                "type": "object",
                "properties": {
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "start": {
                        "description": "Returns or sets the scheduled start date of an assignment.",
                        "type": "string"
                    },
                    "finish": {
                        "description": "Returns or sets the scheduled finish date of an assignment.",
                        "type": "string"
                    },
                    "unit": {
                        "description": "The time unit of a timephased data period.",
                        "type": ""
                    },
                    "value": {
                        "description": "The value per unit of time for a timephased data period.",
                        "type": "string"
                    },
                    "timephasedDataType": {
                        "description": "The type of a timephased data.",
                        "type": ""
                    }
                }
            },
            "unit": {
                "type": "object"
            },
            "timephasedDataType": {
                "type": "object"
            },
            "CalendarItemsResponse": {
                "type": "object"
            },
            "CalendarItems": {
                "type": "object"
            },
            "CalendarItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "CalendarItemResponse": {
                "type": "object"
            },
            "Calendar": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "days": {
                        "description": "The collection of weekdays that defines the calendar.",
                        "type": "array"
                    },
                    "isBaseCalendar": {
                        "description": "Determines whether the calendar is a base calendar.",
                        "type": "boolean"
                    },
                    "Calendar": {
                        "description": "Represents a calendar used in a project.",
                        "type": "object"
                    },
                    "baseCalendar": {
                        "description": "The base calendar on which this calendar depends.\nOnly applicable if the calendar is not a base calendar.",
                        "type": ""
                    },
                    "isBaselineCalendar": {
                        "description": "Specifies whether the calendar is a baseline calendar.",
                        "type": "boolean"
                    }
                }
            },
            "days": {
                "type": "array"
            },
            "WeekDay": {
                "type": "object",
                "properties": {
                    "dayType": {
                        "description": "Returns or sets the type of a day.",
                        "type": ""
                    },
                    "dayWorking": {
                        "description": "Determines whether the specified date or day type is working.",
                        "type": "boolean"
                    },
                    "fromDate": {
                        "description": "Returns or sets the beginning of an exception time.",
                        "type": "string"
                    },
                    "toDate": {
                        "description": "Returns or sets the end of an exception time.",
                        "type": "string"
                    },
                    "workingTimes": {
                        "description": "The collection of working times that define the time worked on the weekday.",
                        "type": "array"
                    }
                }
            },
            "dayType": {
                "type": "object"
            },
            "workingTimes": {
                "type": "array"
            },
            "WorkingTime": {
                "type": "object",
                "properties": {
                    "fromTime": {
                        "description": "Returns or sets the beginning of a working time.\nRead\/write DateTime.",
                        "type": "string"
                    },
                    "toTime": {
                        "description": "Returns or sets the end of a working time.\nRead\/write DateTime.",
                        "type": "string"
                    }
                }
            },
            "CalendarResponse": {
                "type": "object"
            },
            "CalendarExceptionsResponse": {
                "type": "object"
            },
            "CalendarException": {
                "type": "object",
                "properties": {
                    "index": {
                        "description": "Index of the current item in the collection of calendar's exceptions.",
                        "type": "integer"
                    },
                    "enteredByOccurrences": {
                        "description": "Determines whether the range of recurrence is defined by entering a number of occurrences.\nFalse specifies that the range of recurrence is defined by entering a finish date.",
                        "type": "boolean"
                    },
                    "fromDate": {
                        "description": "Returns or sets the beginning of an exception time.",
                        "type": "string"
                    },
                    "toDate": {
                        "description": "Returns or sets the end of an exception time.",
                        "type": "string"
                    },
                    "occurrences": {
                        "description": "The number of occurrences for which the calendar exception is valid.",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "description": "The exception type.",
                        "type": ""
                    },
                    "period": {
                        "description": "The period of recurrence for the exception.",
                        "type": "integer"
                    },
                    "daysOfWeek": {
                        "description": "The days of the week on which the exception is valid.",
                        "type": "array"
                    },
                    "monthItem": {
                        "description": "The month item for which an exception recurrence is scheduled.",
                        "type": ""
                    },
                    "monthPosition": {
                        "description": "The position of a month item within a month.",
                        "type": ""
                    },
                    "month": {
                        "description": "The month for which an exception recurrence is scheduled.",
                        "type": ""
                    },
                    "monthDay": {
                        "description": "The day of a month on which an exception recurrence is scheduled.",
                        "type": "integer"
                    },
                    "dayWorking": {
                        "description": "Determines whether the specified date or day type is working.",
                        "type": "boolean"
                    },
                    "workingTimes": {
                        "description": "The collection of working times that define the time worked on the weekday.",
                        "type": "array"
                    }
                }
            },
            "type": {
                "type": "object"
            },
            "daysOfWeek": {
                "type": "array"
            },
            "monthItem": {
                "type": "object"
            },
            "monthPosition": {
                "type": "object"
            },
            "month": {
                "type": "object"
            },
            "CalendarWorkWeeksResponse": {
                "type": "object"
            },
            "WorkWeek": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "fromDate": {
                        "description": "Returns or sets the beginning of an exception time.",
                        "type": "string"
                    },
                    "toDate": {
                        "description": "Returns or sets the end of an exception time.",
                        "type": "string"
                    },
                    "weekDays": {
                        "description": "The collection of week days that define the working time of current working week.",
                        "type": "array"
                    }
                }
            },
            "weekDays": {
                "type": "array"
            },
            "TaskItemsResponse": {
                "type": "object"
            },
            "TaskItems": {
                "type": "object"
            },
            "TaskItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "start": {
                        "description": "Returns or sets the scheduled start date of an assignment.",
                        "type": "string"
                    },
                    "finish": {
                        "description": "Returns or sets the scheduled finish date of an assignment.",
                        "type": "string"
                    },
                    "duration": {
                        "description": "The duration of a task.",
                        "type": "string"
                    }
                }
            },
            "ProjectIdsResponse": {
                "type": "object"
            },
            "PageCountResponse": {
                "type": "object"
            },
            "DocumentPropertiesResponse": {
                "type": "object"
            },
            "DocumentProperties": {
                "type": "object"
            },
            "DocumentProperty": {
                "type": "object"
            },
            "DocumentPropertyResponse": {
                "type": "object"
            },
            "ExtendedAttributeItemsResponse": {
                "type": "object"
            },
            "ExtendedAttributeItems": {
                "type": "object"
            },
            "ExtendedAttributeItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "index": {
                        "description": "Index of the current item in the collection of calendar's exceptions.",
                        "type": "integer"
                    },
                    "fieldName": {
                        "description": "",
                        "type": "string"
                    },
                    "alias": {
                        "description": "",
                        "type": "string"
                    },
                    "fieldId": {
                        "description": "Gets or sets the id of a field.",
                        "type": "string"
                    }
                }
            },
            "ExtendedAttributeResponse": {
                "type": "object"
            },
            "ExtendedAttributeDefinition": {
                "type": "object",
                "properties": {
                    "fieldId": {
                        "description": "Gets or sets the id of a field.",
                        "type": "string"
                    },
                    "fieldName": {
                        "description": "",
                        "type": "string"
                    },
                    "cfType": {
                        "description": "The type of a custom field.",
                        "type": ""
                    },
                    "guid": {
                        "description": "The Guid of a custom field.",
                        "type": "string"
                    },
                    "elementType": {
                        "description": "Determines whether the extended attribute is associated\nwith a task or a resource",
                        "type": ""
                    },
                    "maxMultiValues": {
                        "description": "The maximum number of values you can set in a picklist.",
                        "type": "integer"
                    },
                    "userDef": {
                        "description": "Determines whether a custom field is user defined.",
                        "type": "boolean"
                    },
                    "alias": {
                        "description": "",
                        "type": "string"
                    },
                    "secondaryPid": {
                        "description": "The secondary Pid of a custom field.",
                        "type": "string"
                    },
                    "autoRollDown": {
                        "description": "Determines whether an automatic rolldown to assignments is enabled.",
                        "type": "boolean"
                    },
                    "defaultGuid": {
                        "description": "The Guid of the default lookup table entry.",
                        "type": "string"
                    },
                    "lookupUid": {
                        "description": "The Guid of the lookup table associated with a custom field.",
                        "type": "string"
                    },
                    "phoneticsAlias": {
                        "description": "The phonetic pronunciation of the alias of a custom field.",
                        "type": "string"
                    },
                    "rollupType": {
                        "description": "The way rollups are calculated.",
                        "type": ""
                    },
                    "calculationType": {
                        "description": "Determines whether rollups are calculated for a task and group summary rows.",
                        "type": ""
                    },
                    "formula": {
                        "description": "The formula that Microsoft Project uses to populate a custom task field.",
                        "type": "string"
                    },
                    "restrictValues": {
                        "description": "Determines whether only values in the list are allowed in a file.",
                        "type": "boolean"
                    },
                    "valuelistSortOrder": {
                        "description": "The way value lists are sorted. Values are: 0=Descending, 1=Ascending.",
                        "type": "integer"
                    },
                    "appendNewValues": {
                        "description": "Determines whether new values added to a project are automatically added to the list.",
                        "type": "boolean"
                    },
                    "default": {
                        "description": "The default value in the list.",
                        "type": "string"
                    },
                    "valueList": {
                        "description": "Returns list of Extended Attribute Values.",
                        "type": "array"
                    },
                    "secondaryGuid": {
                        "description": "Secondary guid of extended attribute.",
                        "type": "string"
                    }
                }
            },
            "cfType": {
                "type": "object"
            },
            "elementType": {
                "type": "object"
            },
            "rollupType": {
                "type": "object"
            },
            "calculationType": {
                "type": "object"
            },
            "valueList": {
                "type": "array"
            },
            "Value": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "val": {
                        "description": "The actual value.",
                        "type": "string"
                    },
                    "dateTimeValue": {
                        "description": "The value in case of datetime type",
                        "type": "string"
                    },
                    "durationValue": {
                        "description": "The value in case of duration type",
                        "type": "integer"
                    },
                    "description": {
                        "description": "The description of a value.",
                        "type": "string"
                    },
                    "phonetic": {
                        "description": "The phonetic information about custom field name.",
                        "type": "string"
                    }
                }
            },
            "ExtendedAttributeItemResponse": {
                "type": "object"
            },
            "OutlineCodeItemsResponse": {
                "type": "object"
            },
            "OutlineCodeItems": {
                "type": "object"
            },
            "OutlineCodeItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "index": {
                        "description": "Index of the current item in the collection of calendar's exceptions.",
                        "type": "integer"
                    }
                }
            },
            "OutlineCodeResponse": {
                "type": "object"
            },
            "OutlineCodeDefinition": {
                "type": "object",
                "properties": {
                    "guid": {
                        "description": "The Guid of a custom field.",
                        "type": "string"
                    },
                    "fieldId": {
                        "description": "Gets or sets the id of a field.",
                        "type": "string"
                    },
                    "fieldName": {
                        "description": "",
                        "type": "string"
                    },
                    "alias": {
                        "description": "",
                        "type": "string"
                    },
                    "phoneticAlias": {
                        "description": "The phonetic pronunciation of the alias of the custom outline code.",
                        "type": "string"
                    },
                    "values": {
                        "description": "Returns List&lt;OutlineValue&gt; Values.\nThe values of the table associated with this outline code.",
                        "type": "array"
                    },
                    "enterprise": {
                        "description": "Determines whether a custom outline code is an enterprise custom outline code.",
                        "type": "boolean"
                    },
                    "enterpriseOutlineCodeAlias": {
                        "description": "The reference to another custom field for which this outline code definition is an alias.",
                        "type": "integer"
                    },
                    "resourceSubstitutionEnabled": {
                        "description": "Determines whether the custom outline code can be used\nby the Resource Substitution Wizard in Microsoft Project.",
                        "type": "boolean"
                    },
                    "leafOnly": {
                        "description": "Determines whether the values specified in this outline code field must be leaf values.",
                        "type": "boolean"
                    },
                    "allLevelsRequired": {
                        "description": "Determines whether the new codes must have all levels.\nNot available for Enterprise Codes.",
                        "type": "boolean"
                    },
                    "onlyTableValuesAllowed": {
                        "description": "Determines whether the values specified must come from values table.",
                        "type": "boolean"
                    },
                    "masks": {
                        "description": "Returns List&lt;OutlineMask&gt; Masks.\nThe table of entries that define the outline code mask.",
                        "type": "array"
                    },
                    "showIndent": {
                        "description": "Determines whether the indents of this outline code must be shown.",
                        "type": "boolean"
                    }
                }
            },
            "values": {
                "type": "array"
            },
            "masks": {
                "type": "array"
            },
            "OutlineValue": {
                "type": "object",
                "properties": {
                    "valueId": {
                        "description": "The unique Id of an outline code value within a project.",
                        "type": "integer"
                    },
                    "fieldGuid": {
                        "description": "The Guid of an outline code value.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The exception type.",
                        "type": ""
                    },
                    "parentValueId": {
                        "description": "The Id of a parent node of an outline code.",
                        "type": "integer"
                    },
                    "value": {
                        "description": "The value per unit of time for a timephased data period.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of a value.",
                        "type": "string"
                    },
                    "isCollapsed": {
                        "description": "Determines whether outline value is collapsed or not.",
                        "type": "boolean"
                    }
                }
            },
            "OutlineMask": {
                "type": "object",
                "properties": {
                    "level": {
                        "description": "The level of a mask.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The exception type.",
                        "type": ""
                    },
                    "length": {
                        "description": "The maximum length (in characters) of the outline code values. 0 if length is not defined.",
                        "type": "integer"
                    },
                    "separator": {
                        "description": "The separator of code values.",
                        "type": "string"
                    }
                }
            },
            "ProjectListResponse": {
                "type": "object"
            },
            "ProjectList": {
                "type": "object"
            },
            "ProjectInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the project.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "createdDate": {
                        "description": "The date and time when the project was created.",
                        "type": "string"
                    },
                    "isCheckedOut": {
                        "description": "Value indicating whether the project is checked out.",
                        "type": "boolean"
                    },
                    "lastPublishedDate": {
                        "description": "The most recent date when the project was published.",
                        "type": "string"
                    },
                    "lastSavedDate": {
                        "description": "The most recent date when the project was saved.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of a value.",
                        "type": "string"
                    }
                }
            },
            "ProjectRecalculateResponse": {
                "type": "object"
            },
            "ProjectRecalculationResult": {
                "type": "object",
                "properties": {
                    "validationState": {
                        "description": "",
                        "type": ""
                    },
                    "validationErrorMessage": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "validationState": {
                "type": "object"
            },
            "ResourceItemsResponse": {
                "type": "object"
            },
            "ResourceItems": {
                "type": "object"
            },
            "ResourceItem": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ResourceItemResponse": {
                "type": "object"
            },
            "ResourceResponse": {
                "type": "object"
            },
            "Resource": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "guid": {
                        "description": "The Guid of a custom field.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The exception type.",
                        "type": ""
                    },
                    "isNull": {
                        "description": "Determines whether a resource is null.",
                        "type": "boolean"
                    },
                    "initials": {
                        "description": "The initials of a resource.",
                        "type": "string"
                    },
                    "phonetics": {
                        "description": "The phonetic spelling of the resource name. For use with Japanese only.",
                        "type": "string"
                    },
                    "ntAccount": {
                        "description": "The NT account associated with a resource.",
                        "type": "string"
                    },
                    "windowsUserAccount": {
                        "description": "The NT account associated with a resource.",
                        "type": "string"
                    },
                    "workgroup": {
                        "description": "The type of a workgroup to which a resource belongs.\n type.",
                        "type": ""
                    },
                    "materialLabel": {
                        "description": "The unit of measure for the material resource.\nRead\/write String.",
                        "type": "string"
                    },
                    "code": {
                        "description": "The code or other information about a resource.",
                        "type": "string"
                    },
                    "group": {
                        "description": "The group to which a resource belongs.",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "",
                        "type": "string"
                    },
                    "hyperlink": {
                        "description": "Returns or sets the title of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkAddress": {
                        "description": "Returns or sets the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkSubAddress": {
                        "description": "Returns or sets the document bookmark of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "maxUnits": {
                        "description": "The maximum number of units of a resource is available.",
                        "type": "number"
                    },
                    "peakUnits": {
                        "description": "Returns or sets the largest number of a resource's units assigned to a task.",
                        "type": "number"
                    },
                    "overallocated": {
                        "description": "Determines whether the assignment is overallocated.",
                        "type": "boolean"
                    },
                    "availableFrom": {
                        "description": "The first date when a resource is available.",
                        "type": "string"
                    },
                    "availableTo": {
                        "description": "The last date when a resource is available.",
                        "type": "string"
                    },
                    "start": {
                        "description": "Returns or sets the scheduled start date of an assignment.",
                        "type": "string"
                    },
                    "finish": {
                        "description": "Returns or sets the scheduled finish date of an assignment.",
                        "type": "string"
                    },
                    "canLevel": {
                        "description": "Determines whether a resource can be leveled.",
                        "type": "boolean"
                    },
                    "accrueAt": {
                        "description": "Determines how cost is accrued against the resource.",
                        "type": ""
                    },
                    "work": {
                        "description": "Returns or sets the amount of scheduled work for an assignment.\nRead\/write TimeSpan.",
                        "type": "string"
                    },
                    "regularWork": {
                        "description": "Returns or sets the amount of a non-overtime work scheduled for an assignment.",
                        "type": "string"
                    },
                    "overtimeWork": {
                        "description": "Returns or sets the scheduled overtime work of an assignment.",
                        "type": "string"
                    },
                    "actualWork": {
                        "description": "Returns or sets the actual amount of a work incurred on an assignment.",
                        "type": "string"
                    },
                    "remainingWork": {
                        "description": "Returns or sets the remaining work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "actualOvertimeWork": {
                        "description": "Returns or sets the actual amount of an overtime work incurred on an assignment.",
                        "type": "string"
                    },
                    "remainingOvertimeWork": {
                        "description": "Returns or sets the remaining overtime work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "percentWorkComplete": {
                        "description": "Returns or sets the amount of a work completed on an assignment.",
                        "type": "integer"
                    },
                    "standardRate": {
                        "description": "The standard rate of a resource.\nThis value retrieved from the current date if a rate table exists for a resource.",
                        "type": "number"
                    },
                    "standardRateFormat": {
                        "description": "The units used by Microsoft Project to display the standard rate.",
                        "type": ""
                    },
                    "cost": {
                        "description": "Returns or sets the projected or scheduled cost of an assignment.",
                        "type": "number"
                    },
                    "overtimeRateFormat": {
                        "description": "The units used by Microsoft Project to display the overtime rate.",
                        "type": ""
                    },
                    "overtimeCost": {
                        "description": "Returns or sets the sum of the actual and remaining overtime cost of an assignment.",
                        "type": "number"
                    },
                    "costPerUse": {
                        "description": "The cost per use of a resource.\nThis value retrieved from the current date if a rate table exists for the resource.",
                        "type": "number"
                    },
                    "actualCost": {
                        "description": "Returns or sets the actual cost incurred on an assignment.",
                        "type": "number"
                    },
                    "actualOvertimeCost": {
                        "description": "Returns or sets the actual overtime cost incurred on an assignment.",
                        "type": "number"
                    },
                    "remainingCost": {
                        "description": "Returns or sets the remaining projected cost of completing an assignment.",
                        "type": "number"
                    },
                    "remainingOvertimeCost": {
                        "description": "Returns or sets the remaining projected overtime cost of completing an assignment.",
                        "type": "number"
                    },
                    "workVariance": {
                        "description": "Returns or sets the variance of an assignment work from the baseline work as minutes.",
                        "type": "number"
                    },
                    "costVariance": {
                        "description": "Returns or sets the difference between the cost and baseline cost of a resource.",
                        "type": "number"
                    },
                    "sv": {
                        "description": "Returns or sets the earned value schedule variance, through the project status date.",
                        "type": "number"
                    },
                    "cv": {
                        "description": "Returns or sets the earned value cost variance.",
                        "type": "number"
                    },
                    "acwp": {
                        "description": "Returns or sets the actual cost of a work performed on an assignment to-date.",
                        "type": "number"
                    },
                    "calendarUid": {
                        "description": "The calendar of a resource.",
                        "type": "integer"
                    },
                    "notesText": {
                        "description": "Notes' plain text extracted from RTF data.",
                        "type": "string"
                    },
                    "notes": {
                        "description": "Returns or sets the text notes associated with an assignment.",
                        "type": "string"
                    },
                    "notesRTF": {
                        "description": "The text notes in RTF format.\nSupported for MPP formats only.",
                        "type": "string"
                    },
                    "bcws": {
                        "description": "Returns or sets the budgeted cost of a work on assignment.",
                        "type": "number"
                    },
                    "bcwp": {
                        "description": "Returns or sets the budgeted cost of a work performed on assignment to-date.",
                        "type": "number"
                    },
                    "isGeneric": {
                        "description": "Determines whether a resource is generic.",
                        "type": "boolean"
                    },
                    "isInactive": {
                        "description": "Determines whether a resource is inactive.",
                        "type": "boolean"
                    },
                    "isEnterprise": {
                        "description": "Determines whether a resource is an Enterprise resource.",
                        "type": "boolean"
                    },
                    "bookingType": {
                        "description": "Returns or sets the booking type of an assignment.",
                        "type": ""
                    },
                    "actualWorkProtected": {
                        "description": "Returns or sets the duration through which actual work is protected.",
                        "type": "string"
                    },
                    "actualOvertimeWorkProtected": {
                        "description": "Returns or sets the duration through which actual overtime work is protected.",
                        "type": "string"
                    },
                    "activeDirectoryGuid": {
                        "description": "The Active Directory Guid for a resource.",
                        "type": "string"
                    },
                    "creationDate": {
                        "description": "Returns or sets the date that the assignment was created.",
                        "type": "string"
                    },
                    "costCenter": {
                        "description": "Indicates which cost center the costs accrued by the resource should be charged to.",
                        "type": "string"
                    },
                    "isCostResource": {
                        "description": "Determines whether a resource is a cost resource.",
                        "type": "boolean"
                    },
                    "teamAssignmentPool": {
                        "description": "Determines whether the current resource is a team resource.\n            ",
                        "type": "boolean"
                    },
                    "assignmentOwner": {
                        "description": "The name of an assignment owner.",
                        "type": "string"
                    },
                    "assignmentOwnerGuid": {
                        "description": "The GUID of an assignment owner.",
                        "type": "string"
                    },
                    "isBudget": {
                        "description": "Determines whether a resource is a budget resource.",
                        "type": "boolean"
                    },
                    "budgetWork": {
                        "description": "Returns or sets the budgeted work amount for a work or material resources on an assignment.",
                        "type": "string"
                    },
                    "budgetCost": {
                        "description": "Returns or sets the budgeted cost of resources on an assignment.",
                        "type": "number"
                    },
                    "overtimeRate": {
                        "description": "The overtime rate of a resource.\nThis value retrieved from the current date if a rate table exists for a resource.",
                        "type": "number"
                    },
                    "baselines": {
                        "description": "List of ResourceAssignment's Baseline values.",
                        "type": "array"
                    },
                    "extendedAttributes": {
                        "description": "ResourceAssignment extended attributes.",
                        "type": "array"
                    },
                    "outlineCodes": {
                        "description": "Resource outline codes.",
                        "type": "array"
                    }
                }
            },
            "workgroup": {
                "type": "object"
            },
            "accrueAt": {
                "type": "object"
            },
            "standardRateFormat": {
                "type": "object"
            },
            "overtimeRateFormat": {
                "type": "object"
            },
            "outlineCodes": {
                "type": "array"
            },
            "OutlineCode": {
                "type": "object",
                "properties": {
                    "fieldId": {
                        "description": "Gets or sets the id of a field.",
                        "type": "string"
                    },
                    "valueId": {
                        "description": "The unique Id of an outline code value within a project.",
                        "type": "integer"
                    },
                    "valueGuid": {
                        "description": "Gets or sets the guid of a value.",
                        "type": "string"
                    }
                }
            },
            "AssignmentsResponse": {
                "type": "object"
            },
            "ResourceAssignments": {
                "type": "object"
            },
            "TaskItemResponse": {
                "type": "object"
            },
            "TaskResponse": {
                "type": "object"
            },
            "Task": {
                "type": "object",
                "properties": {
                    "uid": {
                        "description": "The unique id (Uid) of the resource's assignment.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "durationText": {
                        "description": "The duration of a task entered by the user as a text.",
                        "type": "string"
                    },
                    "duration": {
                        "description": "The duration of a task.",
                        "type": "string"
                    },
                    "start": {
                        "description": "Returns or sets the scheduled start date of an assignment.",
                        "type": "string"
                    },
                    "finish": {
                        "description": "Returns or sets the scheduled finish date of an assignment.",
                        "type": "string"
                    },
                    "startText": {
                        "description": "Returns the task's start text.",
                        "type": "string"
                    },
                    "finishText": {
                        "description": "Returns the task's finish text.",
                        "type": "string"
                    },
                    "percentComplete": {
                        "description": "The percent complete of a task.",
                        "type": "integer"
                    },
                    "percentWorkComplete": {
                        "description": "Returns or sets the amount of a work completed on an assignment.",
                        "type": "integer"
                    },
                    "isActive": {
                        "description": "Determines if a task is active.",
                        "type": "boolean"
                    },
                    "actualCost": {
                        "description": "Returns or sets the actual cost incurred on an assignment.",
                        "type": "number"
                    },
                    "actualDuration": {
                        "description": "The actual duration of a task.",
                        "type": "string"
                    },
                    "actualFinish": {
                        "description": "Returns or sets the actual finish date of an assignment.",
                        "type": "string"
                    },
                    "actualOvertimeCost": {
                        "description": "Returns or sets the actual overtime cost incurred on an assignment.",
                        "type": "number"
                    },
                    "actualOvertimeWork": {
                        "description": "Returns or sets the actual amount of an overtime work incurred on an assignment.",
                        "type": "string"
                    },
                    "actualWorkProtected": {
                        "description": "Returns or sets the duration through which actual work is protected.",
                        "type": "string"
                    },
                    "actualOvertimeWorkProtected": {
                        "description": "Returns or sets the duration through which actual overtime work is protected.",
                        "type": "string"
                    },
                    "actualStart": {
                        "description": "Returns or sets the actual start date of an assignment.",
                        "type": "string"
                    },
                    "budgetWork": {
                        "description": "Returns or sets the budgeted work amount for a work or material resources on an assignment.",
                        "type": "string"
                    },
                    "budgetCost": {
                        "description": "Returns or sets the budgeted cost of resources on an assignment.",
                        "type": "number"
                    },
                    "constraintDate": {
                        "description": "Shows the specific date associated with certain constraint types, \nsuch as Must Start On, Must Finish On, Start No Earlier Than, Start No Later Than, Finish No Earlier Than, and Finish No Later Than.",
                        "type": "string"
                    },
                    "constraintType": {
                        "description": "Provides choices for the type of constraint that can be applied for scheduling a task.",
                        "type": ""
                    },
                    "contact": {
                        "description": "The contact person for a task.",
                        "type": "string"
                    },
                    "cost": {
                        "description": "Returns or sets the projected or scheduled cost of an assignment.",
                        "type": "number"
                    },
                    "cv": {
                        "description": "Returns or sets the earned value cost variance.",
                        "type": "number"
                    },
                    "deadline": {
                        "description": "The deadline for a task to be completed.",
                        "type": "string"
                    },
                    "durationVariance": {
                        "description": "Contains the difference between the total duration of a task and the baseline duration of a task.",
                        "type": "string"
                    },
                    "earlyFinish": {
                        "description": "The early finish date of a task.",
                        "type": "string"
                    },
                    "earlyStart": {
                        "description": "The early start date of a task.",
                        "type": "string"
                    },
                    "isEffortDriven": {
                        "description": "Determines whether a task is effort-driven.",
                        "type": "boolean"
                    },
                    "isExternalTask": {
                        "description": "Determines whether a task is external.",
                        "type": "boolean"
                    },
                    "externalTaskProject": {
                        "description": "The source location and task identifier of an external task.",
                        "type": "string"
                    },
                    "externalId": {
                        "description": "If a task is an external task the property contains the task's external Id.\n type.",
                        "type": "integer"
                    },
                    "finishSlack": {
                        "description": "Contains the duration between the Early Finish and Late Finish dates.",
                        "type": "integer"
                    },
                    "finishVariance": {
                        "description": "Returns or sets the variance of an assignment finish date from a baseline finish date.",
                        "type": "integer"
                    },
                    "fixedCost": {
                        "description": "The fixed cost of a task.",
                        "type": "number"
                    },
                    "fixedCostAccrual": {
                        "description": "Determines how the fixed cost is accrued against a task.",
                        "type": ""
                    },
                    "freeSlack": {
                        "description": "The amount of a free slack.",
                        "type": "integer"
                    },
                    "guid": {
                        "description": "The Guid of a custom field.",
                        "type": "string"
                    },
                    "hideBar": {
                        "description": "Determines whether the GANTT bar of a task is hidden when displayed in Microsoft Project.",
                        "type": "boolean"
                    },
                    "ignoreResourceCalendar": {
                        "description": "Determines whether a task ignores the resource calendar.",
                        "type": "boolean"
                    },
                    "lateFinish": {
                        "description": "The late finish date of a task.",
                        "type": "string"
                    },
                    "lateStart": {
                        "description": "The late start date of a task.",
                        "type": "string"
                    },
                    "isLevelAssignments": {
                        "description": "",
                        "type": "boolean"
                    },
                    "canLevelingSplit": {
                        "description": "",
                        "type": "boolean"
                    },
                    "levelingDelay": {
                        "description": "Returns or sets the delay caused by leveling.",
                        "type": "integer"
                    },
                    "isMarked": {
                        "description": "Shows whether a task is marked for further action or identification of some kind.\n            ",
                        "type": "boolean"
                    },
                    "isMilestone": {
                        "description": "Determines whether a task is a milestone.",
                        "type": "boolean"
                    },
                    "isCritical": {
                        "description": "Determines whether a task is in the critical chain.",
                        "type": "boolean"
                    },
                    "isSubproject": {
                        "description": "Determines whether a task is an inserted project.",
                        "type": "boolean"
                    },
                    "isSubprojectReadOnly": {
                        "description": "Determines whether a subproject is read-only.",
                        "type": "boolean"
                    },
                    "subprojectName": {
                        "description": "The source location of a subproject.\nRead\/write String.",
                        "type": "string"
                    },
                    "isSummary": {
                        "description": "Determines whether a task is a summary task.",
                        "type": "boolean"
                    },
                    "subtasksUids": {
                        "description": "Unique ids of all subtasks.",
                        "type": "array"
                    },
                    "outlineLevel": {
                        "description": "The outline level of a task.",
                        "type": "integer"
                    },
                    "isOverAllocated": {
                        "description": "",
                        "type": "boolean"
                    },
                    "isEstimated": {
                        "description": "Determines whether a task is estimated.",
                        "type": "boolean"
                    },
                    "overtimeCost": {
                        "description": "Returns or sets the sum of the actual and remaining overtime cost of an assignment.",
                        "type": "number"
                    },
                    "overtimeWork": {
                        "description": "Returns or sets the scheduled overtime work of an assignment.",
                        "type": "string"
                    },
                    "physicalPercentComplete": {
                        "description": "The percentage complete value entered by the Project Manager.",
                        "type": "integer"
                    },
                    "preLeveledFinish": {
                        "description": "",
                        "type": "string"
                    },
                    "preLeveledStart": {
                        "description": "",
                        "type": "string"
                    },
                    "isRecurring": {
                        "description": "Determines whether a task is a recurring task.",
                        "type": "boolean"
                    },
                    "regularWork": {
                        "description": "Returns or sets the amount of a non-overtime work scheduled for an assignment.",
                        "type": "string"
                    },
                    "remainingCost": {
                        "description": "Returns or sets the remaining projected cost of completing an assignment.",
                        "type": "number"
                    },
                    "remainingDuration": {
                        "description": "The amount of time required to complete the unfinished portion of a task.",
                        "type": "string"
                    },
                    "remainingOvertimeCost": {
                        "description": "Returns or sets the remaining projected overtime cost of completing an assignment.",
                        "type": "number"
                    },
                    "remainingOvertimeWork": {
                        "description": "Returns or sets the remaining overtime work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "remainingWork": {
                        "description": "Returns or sets the remaining work scheduled to complete an assignment.",
                        "type": "string"
                    },
                    "resume": {
                        "description": "Returns or sets the date when assignment is resumed.",
                        "type": "string"
                    },
                    "isResumeValid": {
                        "description": "Determines whether a task can be resumed.",
                        "type": "boolean"
                    },
                    "stop": {
                        "description": "Returns or sets the date when assignment is stopped.",
                        "type": "string"
                    },
                    "isRollup": {
                        "description": "Determines whether a task is rolled up.",
                        "type": "boolean"
                    },
                    "startSlack": {
                        "description": "Returns the task's start slack.",
                        "type": "integer"
                    },
                    "startVariance": {
                        "description": "Returns or sets the variance of an assignment start date from a baseline start date.",
                        "type": "integer"
                    },
                    "calendarUid": {
                        "description": "The calendar of a resource.",
                        "type": "integer"
                    },
                    "isManual": {
                        "description": "Determines whether a task is manually scheduled.",
                        "type": "boolean"
                    },
                    "manualStart": {
                        "description": "Defines manually scheduled start of a task.",
                        "type": "string"
                    },
                    "manualFinish": {
                        "description": "Defines manually scheduled finish of a task.",
                        "type": "string"
                    },
                    "manualDuration": {
                        "description": "Defines manually scheduled duration of a task.",
                        "type": "string"
                    },
                    "totalSlack": {
                        "description": "The amount of a total slack.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "The exception type.",
                        "type": ""
                    },
                    "wbs": {
                        "description": "The work breakdown structure code of a task.",
                        "type": "string"
                    },
                    "priority": {
                        "description": "The priority of a task from 0 to 1000.",
                        "type": "integer"
                    },
                    "work": {
                        "description": "Returns or sets the amount of scheduled work for an assignment.\nRead\/write TimeSpan.",
                        "type": "string"
                    },
                    "workVariance": {
                        "description": "Returns or sets the variance of an assignment work from the baseline work as minutes.",
                        "type": "number"
                    },
                    "notesText": {
                        "description": "Notes' plain text extracted from RTF data.",
                        "type": "string"
                    },
                    "notesRTF": {
                        "description": "The text notes in RTF format.\nSupported for MPP formats only.",
                        "type": "string"
                    },
                    "acwp": {
                        "description": "Returns or sets the actual cost of a work performed on an assignment to-date.",
                        "type": "number"
                    },
                    "bcws": {
                        "description": "Returns or sets the budgeted cost of a work on assignment.",
                        "type": "number"
                    },
                    "bcwp": {
                        "description": "Returns or sets the budgeted cost of a work performed on assignment to-date.",
                        "type": "number"
                    },
                    "levelingDelayFormat": {
                        "description": "Returns or sets the duration format of a delay.",
                        "type": ""
                    },
                    "predecessors": {
                        "description": "The task Uid numbers for the predecessor tasks on which the task depends before it can be started or finished.",
                        "type": "string"
                    },
                    "successors": {
                        "description": "The task Uid numbers for the successor tasks to a task.",
                        "type": "string"
                    },
                    "ignoreWarnings": {
                        "description": "Indicates whether to hide the schedule conflict warning indicator in Microsoft Project.\n            ",
                        "type": "boolean"
                    },
                    "isExpanded": {
                        "description": "Determines whether a summary task is expanded or not in GanttChart view.",
                        "type": "boolean"
                    },
                    "displayOnTimeline": {
                        "description": "Specifies whether a task should be displayed on a timeline view.",
                        "type": "boolean"
                    },
                    "displayAsSummary": {
                        "description": "Determines whether the task should be displayed as a summary task.\nReading supported for XML format only.",
                        "type": "boolean"
                    },
                    "hyperlink": {
                        "description": "Returns or sets the title of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkAddress": {
                        "description": "Returns or sets the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "hyperlinkSubAddress": {
                        "description": "Returns or sets the document bookmark of the hyperlink associated with an assignment.",
                        "type": "string"
                    },
                    "earnedValueMethod": {
                        "description": "Determines whether the % Complete or Physical % Complete field should be used to calculate budgeted cost of work performed (BCWP).",
                        "type": ""
                    },
                    "isPublished": {
                        "description": "Determines whether the current task should be published to Project Server with the rest of the project.",
                        "type": "boolean"
                    },
                    "statusManager": {
                        "description": "The name of the enterprise resource who is to receive status updates for the current task from resources.",
                        "type": "string"
                    },
                    "commitmentStart": {
                        "description": "The start date of a delivery.\nReading supported for XML format only.",
                        "type": "string"
                    },
                    "commitmentFinish": {
                        "description": "The finish date of a delivery.\nReading supported for XML format only.",
                        "type": "string"
                    },
                    "commitmentType": {
                        "description": "Determines whether a task has an associated delivery or\na dependency on an associated delivery.\nReading supported for XML format only.",
                        "type": "integer"
                    },
                    "baselines": {
                        "description": "List of ResourceAssignment's Baseline values.",
                        "type": "array"
                    },
                    "extendedAttributes": {
                        "description": "ResourceAssignment extended attributes.",
                        "type": "array"
                    },
                    "outlineCodes": {
                        "description": "Resource outline codes.",
                        "type": "array"
                    }
                }
            },
            "constraintType": {
                "type": "object"
            },
            "fixedCostAccrual": {
                "type": "object"
            },
            "subtasksUids": {
                "type": "array"
            },
            "earnedValueMethod": {
                "type": "object"
            },
            "TaskBaseline": {
                "type": "object"
            },
            "RecurringInfoResponse": {
                "type": "object"
            },
            "RecurringInfo": {
                "type": "object",
                "properties": {
                    "recurrencePattern": {
                        "description": "Represents a recurrence pattern of the recurring task.\nCan be one of the values of  enum.",
                        "type": ""
                    },
                    "startDate": {
                        "description": "Specifies the date for the occurrences to begin.",
                        "type": "string"
                    },
                    "endDate": {
                        "description": "Specifies the date for the occurrences to end.",
                        "type": "string"
                    },
                    "duration": {
                        "description": "The duration of a task.",
                        "type": "string"
                    },
                    "occurrences": {
                        "description": "The number of occurrences for which the calendar exception is valid.",
                        "type": "integer"
                    },
                    "useEndDate": {
                        "description": "Determines whether to use the end date or a number of occurrences for the recurring task.",
                        "type": "boolean"
                    },
                    "dailyRepetitions": {
                        "description": "Specifies an interval between repetitions for the daily recurrence pattern.",
                        "type": "integer"
                    },
                    "dailyUseWorkdays": {
                        "description": "Determines whether to use workdays for the daily recurrence pattern.",
                        "type": "boolean"
                    },
                    "weeklyRepetitions": {
                        "description": "Specifies an interval between repetitions for the weekly recurrence pattern.",
                        "type": "integer"
                    },
                    "weeklyDays": {
                        "description": "Specifies a collection of days used in the weekly recurrence pattern.",
                        "type": ""
                    },
                    "monthlyUseOrdinalDay": {
                        "description": "Determines whether to use ordinal day for the monthly recurrence pattern.",
                        "type": "boolean"
                    },
                    "monthlyOrdinalNumber": {
                        "description": "Specifies an ordinal number of the monthly recurrence pattern.\nCan be one of the values of  enum.",
                        "type": ""
                    },
                    "monthlyOrdinalDay": {
                        "description": "Specifies a day of the monthly recurrence pattern when using ordinal day.\nCan be one of the values of  enum.",
                        "type": ""
                    },
                    "monthlyOrdinalRepetitions": {
                        "description": "Specifies a number of repetitions for the monthly recurrence pattern when using ordinal day.",
                        "type": "integer"
                    },
                    "monthlyDay": {
                        "description": "Specifies a number of day of the monthly recurrence pattern.",
                        "type": "integer"
                    },
                    "monthlyRepetitions": {
                        "description": "Specifies a number of repetitions for the monthly recurrence pattern.",
                        "type": "integer"
                    },
                    "yearlyUseOrdinalDay": {
                        "description": "Determines whether to use ordinal day for the yearly recurrence pattern.",
                        "type": "boolean"
                    },
                    "yearlyDate": {
                        "description": "Specifies a date for the yearly recurrence pattern.",
                        "type": "string"
                    },
                    "yearlyOrdinalNumber": {
                        "description": "Specifies an ordinal number of the yearly recurrence pattern.\nCan be one of the values of  enum.",
                        "type": ""
                    },
                    "yearlyOrdinalDay": {
                        "description": "Specifies a weekday of the yearly recurrence pattern when using ordinal day.\nCan be one of the values of  enum.",
                        "type": ""
                    },
                    "month": {
                        "description": "Reference",
                        "type": "object"
                    },
                    "yearlyOrdinalMonth": {
                        "description": "Specifies a month of the yearly recurrence pattern when using ordinal day.\nCan be one of the values of  enum.",
                        "type": ""
                    }
                }
            },
            "recurrencePattern": {
                "type": "object"
            },
            "weeklyDays": {
                "type": "object"
            },
            "monthlyOrdinalNumber": {
                "type": "object"
            },
            "monthlyOrdinalDay": {
                "type": "object"
            },
            "yearlyOrdinalNumber": {
                "type": "object"
            },
            "yearlyOrdinalDay": {
                "type": "object"
            },
            "TaskLinksResponse": {
                "type": "object"
            },
            "TaskLink": {
                "type": "object",
                "properties": {
                    "link": {
                        "description": "",
                        "type": ""
                    },
                    "index": {
                        "description": "Index of the current item in the collection of calendar's exceptions.",
                        "type": "integer"
                    },
                    "predecessorUid": {
                        "description": "",
                        "type": "integer"
                    },
                    "successorUid": {
                        "description": "",
                        "type": "integer"
                    },
                    "linkType": {
                        "description": "",
                        "type": ""
                    },
                    "lag": {
                        "description": "",
                        "type": "integer"
                    },
                    "lagFormat": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "linkType": {
                "type": "object"
            },
            "lagFormat": {
                "type": "object"
            },
            "TaskLinkResponse": {
                "type": "object"
            },
            "VbaProjectResponse": {
                "type": "object"
            },
            "VbaProject": {
                "type": "object",
                "properties": {
                    "compilationArguments": {
                        "description": "Gets conditional Compilation Arguments",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of a value.",
                        "type": "string"
                    },
                    "helpContextId": {
                        "description": "Gets a project Help Context Id",
                        "type": "integer"
                    },
                    "helpFile": {
                        "description": "Gets a help file name",
                        "type": "string"
                    },
                    "modules": {
                        "description": "Gets a collection of VbaModuleCollection",
                        "type": "array"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "references": {
                        "description": "Gets a collection of VbaReferenceCollection",
                        "type": "array"
                    }
                }
            },
            "modules": {
                "type": "array"
            },
            "references": {
                "type": "array"
            },
            "VbaModule": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "description": "Gets a collection of  VbaModuleAttributeCollection",
                        "type": "array"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "sourceCode": {
                        "description": "Gets a source code of the module",
                        "type": "string"
                    }
                }
            },
            "attributes": {
                "type": "array"
            },
            "VbaModuleAttribute": {
                "type": "object",
                "properties": {
                    "key": {
                        "description": "Gets key of VBA module attribute.",
                        "type": "string"
                    },
                    "value": {
                        "description": "The value per unit of time for a timephased data period.",
                        "type": "string"
                    }
                }
            },
            "VbaReference": {
                "type": "object",
                "properties": {
                    "libIdentifier": {
                        "description": "Gets identifier of the library.",
                        "type": "string"
                    },
                    "name": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "WBSDefinitionResponse": {
                "type": "object"
            },
            "WBSDefinition": {
                "type": "object",
                "properties": {
                    "codePrefix": {
                        "description": "Project Code Prefix.",
                        "type": "string"
                    },
                    "generateWBSCode": {
                        "description": "Determines whether to generate WBS code for new task.",
                        "type": "boolean"
                    },
                    "verifyUniqueness": {
                        "description": "Determines whether to verify uniqueness of new WBS codes.",
                        "type": "boolean"
                    },
                    "codeMaskCollection": {
                        "description": "Collection of WBSCodeMask objects.",
                        "type": "array"
                    }
                }
            },
            "codeMaskCollection": {
                "type": "array"
            },
            "WBSCodeMask": {
                "type": "object",
                "properties": {
                    "level": {
                        "description": "The level of a mask.",
                        "type": "integer"
                    },
                    "length": {
                        "description": "The maximum length (in characters) of the outline code values. 0 if length is not defined.",
                        "type": "integer"
                    },
                    "sequence": {
                        "description": "Specifies  the type of character of the code string.",
                        "type": ""
                    },
                    "separator": {
                        "description": "The separator of code values.",
                        "type": "string"
                    }
                }
            },
            "sequence": {
                "type": "object"
            },
            "FilesUploadResult": {
                "type": "object",
                "properties": {
                    "uploaded": {
                        "description": "List of uploaded file names",
                        "type": "array"
                    },
                    "errors": {
                        "description": "List of errors.",
                        "type": "array"
                    }
                }
            },
            "uploaded": {
                "type": "array"
            },
            "errors": {
                "type": "array"
            },
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "description": "The code or other information about a resource.",
                        "type": "string"
                    },
                    "message": {
                        "description": "Message\n            ",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of a value.",
                        "type": "string"
                    },
                    "innerError": {
                        "description": "Inner Error\n            ",
                        "type": ""
                    }
                }
            },
            "innerError": {
                "type": "object"
            },
            "ErrorDetails": {
                "type": "object",
                "properties": {
                    "requestId": {
                        "description": "The request id",
                        "type": "string"
                    },
                    "date": {
                        "description": "Date",
                        "type": "string"
                    }
                }
            },
            "FilesList": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "Files and folders contained by folder StorageFile.",
                        "type": "array"
                    }
                }
            },
            "value": {
                "type": "array"
            },
            "StorageFile": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "string"
                    },
                    "isFolder": {
                        "description": "True if it is a folder.",
                        "type": "boolean"
                    },
                    "modifiedDate": {
                        "description": "File or folder last modified DateTime.",
                        "type": "string"
                    },
                    "size": {
                        "description": "File or folder size.",
                        "type": "integer"
                    },
                    "path": {
                        "description": "File or folder path.",
                        "type": "string"
                    }
                }
            },
            "StorageExist": {
                "type": "object",
                "properties": {
                    "exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    }
                }
            },
            "ObjectExist": {
                "type": "object",
                "properties": {
                    "exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    },
                    "isFolder": {
                        "description": "True if it is a folder.",
                        "type": "boolean"
                    }
                }
            },
            "DiscUsage": {
                "type": "object",
                "properties": {
                    "usedSize": {
                        "description": "Application used disc space.",
                        "type": "integer"
                    },
                    "totalSize": {
                        "description": "Total disc space.",
                        "type": "integer"
                    }
                }
            },
            "FileVersions": {
                "type": "object",
                "properties": {
                    "value": {
                        "description": "Files and folders contained by folder StorageFile.",
                        "type": "array"
                    }
                }
            },
            "FileVersion": {
                "type": "object"
            }
        }
    }
}