{
    "openapi": "3.0.0",
    "info": {
        "version": "3.0",
        "title": "Aspose.Imaging Cloud API Reference",
        "description": "",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "http:\/\/api.aspose.cloud\/v3.0"
    ],
    "paths": {
        "\/imaging\/{name}\/bmp": {
            "get": {
                "summary": "Update parameters of existing BMP image.",
                "description": "",
                "operationId": "ModifyBmp",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "bitsPerPixel",
                        "in": "query",
                        "description": "Color depth."
                    },
                    {
                        "name": "horizontalResolution",
                        "in": "query",
                        "description": "New horizontal resolution."
                    },
                    {
                        "name": "verticalResolution",
                        "in": "query",
                        "description": "New vertical resolution."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/bmp": {
            "post": {
                "summary": "Update parameters of BMP image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedBmp",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "bitsPerPixel",
                        "in": "query",
                        "description": "Color depth."
                    },
                    {
                        "name": "horizontalResolution",
                        "in": "query",
                        "description": "New horizontal resolution."
                    },
                    {
                        "name": "verticalResolution",
                        "in": "query",
                        "description": "New vertical resolution."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/emf": {
            "get": {
                "summary": "Process existing EMF imaging using given parameters.",
                "description": "",
                "operationId": "ModifyEmf",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/emf": {
            "post": {
                "summary": "Process existing EMF imaging using given parameters. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedEmf",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/frames\/{frameId}": {
            "get": {
                "summary": "Get separate frame from existing TIFF image.",
                "description": "",
                "operationId": "GetImageFrame",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "frameId",
                        "in": "path",
                        "description": "Number of a frame."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "rectWidth",
                        "in": "query",
                        "description": "Width of cropping rectangle."
                    },
                    {
                        "name": "rectHeight",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "rotateFlipMethod",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone."
                    },
                    {
                        "name": "saveOtherFrames",
                        "in": "query",
                        "description": "If result will include all other frames or just a specified frame."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/frames\/{frameId}": {
            "post": {
                "summary": "Get separate frame from existing TIFF image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateImageFrame",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "frameId",
                        "in": "path",
                        "description": "Number of a frame."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "rectWidth",
                        "in": "query",
                        "description": "Width of cropping rectangle."
                    },
                    {
                        "name": "rectHeight",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "rotateFlipMethod",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone."
                    },
                    {
                        "name": "saveOtherFrames",
                        "in": "query",
                        "description": "If result will include all other frames or just a specified frame."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/frames\/{frameId}\/properties": {
            "get": {
                "summary": "Get separate frame properties of existing TIFF image.",
                "description": "",
                "operationId": "GetImageFrameProperties",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "frameId",
                        "in": "path",
                        "description": "Number of a frame."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/frames\/{frameId}\/properties": {
            "post": {
                "summary": "Get separate frame properties of existing TIFF image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "ExtractImageFrameProperties",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "frameId",
                        "in": "path",
                        "description": "Number of a frame."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/gif": {
            "get": {
                "summary": "Update parameters of existing GIF image.",
                "description": "",
                "operationId": "ModifyGif",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "backgroundColorIndex",
                        "in": "query",
                        "description": "Index of the background color."
                    },
                    {
                        "name": "colorResolution",
                        "in": "query",
                        "description": "Color resolution."
                    },
                    {
                        "name": "hasTrailer",
                        "in": "query",
                        "description": "Specifies if image has trailer."
                    },
                    {
                        "name": "interlaced",
                        "in": "query",
                        "description": "Specifies if image is interlaced."
                    },
                    {
                        "name": "isPaletteSorted",
                        "in": "query",
                        "description": "Specifies if palette is sorted."
                    },
                    {
                        "name": "pixelAspectRatio",
                        "in": "query",
                        "description": "Pixel aspect ratio."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/gif": {
            "post": {
                "summary": "Update parameters of GIF image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedGif",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "backgroundColorIndex",
                        "in": "query",
                        "description": "Index of the background color."
                    },
                    {
                        "name": "colorResolution",
                        "in": "query",
                        "description": "Color resolution."
                    },
                    {
                        "name": "hasTrailer",
                        "in": "query",
                        "description": "Specifies if image has trailer."
                    },
                    {
                        "name": "interlaced",
                        "in": "query",
                        "description": "Specifies if image is interlaced."
                    },
                    {
                        "name": "isPaletteSorted",
                        "in": "query",
                        "description": "Specifies if palette is sorted."
                    },
                    {
                        "name": "pixelAspectRatio",
                        "in": "query",
                        "description": "Pixel aspect ratio."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/jpg2000": {
            "get": {
                "summary": "Update parameters of existing JPEG2000 image.",
                "description": "",
                "operationId": "ModifyJpeg2000",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "The comment (can be either single or comma-separated)."
                    },
                    {
                        "name": "codec",
                        "in": "query",
                        "description": "The codec (j2k or jp2)."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/jpg2000": {
            "post": {
                "summary": "Update parameters of JPEG2000 image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedJpeg2000",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "The comment (can be either single or comma-separated)."
                    },
                    {
                        "name": "codec",
                        "in": "query",
                        "description": "The codec (j2k or jp2)."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/jpg": {
            "get": {
                "summary": "Update parameters of existing JPEG image.",
                "description": "",
                "operationId": "ModifyJpeg",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "quality",
                        "in": "query",
                        "description": "Quality of an image from 0 to 100. Default is 75."
                    },
                    {
                        "name": "compressionType",
                        "in": "query",
                        "description": "Compression type: baseline (default), progressive, lossless or jpegls."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/jpg": {
            "post": {
                "summary": "Update parameters of JPEG image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedJpeg",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "quality",
                        "in": "query",
                        "description": "Quality of an image from 0 to 100. Default is 75."
                    },
                    {
                        "name": "compressionType",
                        "in": "query",
                        "description": "Compression type: baseline (default), progressive, lossless or jpegls."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/psd": {
            "get": {
                "summary": "Update parameters of existing PSD image.",
                "description": "",
                "operationId": "ModifyPsd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "channelsCount",
                        "in": "query",
                        "description": "Count of color channels."
                    },
                    {
                        "name": "compressionMethod",
                        "in": "query",
                        "description": "Compression method (for now, raw and RLE are supported)."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/psd": {
            "post": {
                "summary": "Update parameters of PSD image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedPsd",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "channelsCount",
                        "in": "query",
                        "description": "Count of color channels."
                    },
                    {
                        "name": "compressionMethod",
                        "in": "query",
                        "description": "Compression method (for now, raw and RLE are supported)."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/svg": {
            "get": {
                "summary": "Update parameters of existing SVG image.",
                "description": "",
                "operationId": "ModifySvg",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "colorType",
                        "in": "query",
                        "description": "Color type for SVG image. Only RGB is supported for now."
                    },
                    {
                        "name": "textAsShapes",
                        "in": "query",
                        "description": "Whether text must be converted as shapes. true if all text is turned into SVG shapes in the convertion; otherwise, false"
                    },
                    {
                        "name": "scaleX",
                        "in": "query",
                        "description": "Scale X."
                    },
                    {
                        "name": "scaleY",
                        "in": "query",
                        "description": "Scale Y."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/svg": {
            "post": {
                "summary": "Update parameters of SVG image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedSvg",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "colorType",
                        "in": "query",
                        "description": "Color type for SVG image. Only RGB is supported for now."
                    },
                    {
                        "name": "textAsShapes",
                        "in": "query",
                        "description": "Whether text must be converted as shapes. true if all text is turned into SVG shapes in the convertion; otherwise, false"
                    },
                    {
                        "name": "scaleX",
                        "in": "query",
                        "description": "Scale X."
                    },
                    {
                        "name": "scaleY",
                        "in": "query",
                        "description": "Scale Y."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/tiff": {
            "get": {
                "summary": "Update parameters of existing TIFF image.",
                "description": "",
                "operationId": "ModifyTiff",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "bitDepth",
                        "in": "query",
                        "description": "Bit depth."
                    },
                    {
                        "name": "compression",
                        "in": "query",
                        "description": "Compression (none is default). Please, refer to https:\/\/apireference.aspose.com\/net\/imaging\/aspose.imaging.fileformats.tiff.enums\/tiffcompressions for all possible values."
                    },
                    {
                        "name": "resolutionUnit",
                        "in": "query",
                        "description": "New resolution unit (none - the default one, inch or centimeter)."
                    },
                    {
                        "name": "horizontalResolution",
                        "in": "query",
                        "description": "New horizontal resolution."
                    },
                    {
                        "name": "verticalResolution",
                        "in": "query",
                        "description": "New vertical resolution."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/tiff": {
            "post": {
                "summary": "Update parameters of TIFF image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedTiff",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "bitDepth",
                        "in": "query",
                        "description": "Bit depth."
                    },
                    {
                        "name": "compression",
                        "in": "query",
                        "description": "Compression (none is default). Please, refer to https:\/\/apireference.aspose.com\/net\/imaging\/aspose.imaging.fileformats.tiff.enums\/tiffcompressions for all possible values."
                    },
                    {
                        "name": "resolutionUnit",
                        "in": "query",
                        "description": "New resolution unit (none - the default one, inch or centimeter)."
                    },
                    {
                        "name": "horizontalResolution",
                        "in": "query",
                        "description": "New horizontal resolution."
                    },
                    {
                        "name": "verticalResolution",
                        "in": "query",
                        "description": "New vertical resolution."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/tiff\/{name}\/toFax": {
            "get": {
                "summary": "Update parameters of existing TIFF image accordingly to fax parameters.",
                "description": "",
                "operationId": "ConvertTiffToFax",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/tiff\/{name}\/appendTiff": {
            "post": {
                "summary": "Appends existing TIFF image to another existing TIFF image (i.e. merges TIFF images).",
                "description": "",
                "operationId": "AppendTiff",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "appendFile",
                        "in": "query",
                        "description": "Image file name to be appended to original one."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/webp": {
            "get": {
                "summary": "Update parameters of existing WEBP image.",
                "description": "",
                "operationId": "ModifyWebP",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "lossLess",
                        "in": "query",
                        "description": "If WEBP should be in lossless format."
                    },
                    {
                        "name": "quality",
                        "in": "query",
                        "description": "Quality of an image from 0 to 100. Default is 75."
                    },
                    {
                        "name": "animLoopCount",
                        "in": "query",
                        "description": "The animation loop count."
                    },
                    {
                        "name": "animBackgroundColor",
                        "in": "query",
                        "description": "Color of the animation background."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/webp": {
            "post": {
                "summary": "Update parameters of WEBP image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedWebP",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "lossLess",
                        "in": "query",
                        "description": "If WEBP should be in lossless format."
                    },
                    {
                        "name": "quality",
                        "in": "query",
                        "description": "Quality of an image from 0 to 100. Default is 75."
                    },
                    {
                        "name": "animLoopCount",
                        "in": "query",
                        "description": "The animation loop count."
                    },
                    {
                        "name": "animBackgroundColor",
                        "in": "query",
                        "description": "Color of the animation background."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/wmf": {
            "get": {
                "summary": "Process existing WMF image using given parameters.",
                "description": "",
                "operationId": "ModifyWmf",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/wmf": {
            "post": {
                "summary": "Process existing WMF image using given parameters. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateModifiedWmf",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "bkColor",
                        "in": "query",
                        "description": "Color of the background."
                    },
                    {
                        "name": "pageWidth",
                        "in": "query",
                        "description": "Width of the page."
                    },
                    {
                        "name": "pageHeight",
                        "in": "query",
                        "description": "Height of the page."
                    },
                    {
                        "name": "borderX",
                        "in": "query",
                        "description": "Border width."
                    },
                    {
                        "name": "borderY",
                        "in": "query",
                        "description": "Border height."
                    },
                    {
                        "name": "fromScratch",
                        "in": "query",
                        "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/crop": {
            "get": {
                "summary": "Crop an existing image.",
                "description": "",
                "operationId": "CropImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "Width of cropping rectangle"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/crop": {
            "post": {
                "summary": "Crop an image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateCroppedImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "description": "Width of cropping rectangle"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/filterEffect": {
            "put": {
                "summary": "Apply filtering effects to an existing image.",
                "description": "",
                "operationId": "FilterEffectImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "filterType",
                        "in": "query",
                        "description": "Filter type (BigRectangular, SmallRectangular, Median, GaussWiener, MotionWiener, GaussianBlur, Sharpen, BilateralSmoothing)."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/properties": {
            "get": {
                "summary": "Get properties of an image.",
                "description": "",
                "operationId": "GetImageProperties",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/properties": {
            "post": {
                "summary": "Get properties of an image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "ExtractImageProperties",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/resize": {
            "get": {
                "summary": "Resize an existing image.",
                "description": "",
                "operationId": "ResizeImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/resize": {
            "post": {
                "summary": "Resize an image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateResizedImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/rotateflip": {
            "get": {
                "summary": "Rotate and\/or flip an existing image.",
                "description": "",
                "operationId": "RotateFlipImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY)."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/rotateflip": {
            "post": {
                "summary": "Rotate and\/or flip an image. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateRotateFlippedImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY)."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/saveAs": {
            "get": {
                "summary": "Export existing image to another format.",
                "description": "",
                "operationId": "SaveImageAs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/saveAs": {
            "post": {
                "summary": "Export existing image to another format. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.\n            ",
                "description": "",
                "operationId": "CreateSavedImageAs",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/{name}\/updateImage": {
            "get": {
                "summary": "Perform scaling, cropping and flipping of an existing image in a single request.",
                "description": "",
                "operationId": "UpdateImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Filename of image."
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "rectWidth",
                        "in": "query",
                        "description": "Width of cropping rectangle."
                    },
                    {
                        "name": "rectHeight",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "rotateFlipMethod",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/updateImage": {
            "post": {
                "summary": "Perform scaling, cropping and flipping of an image in a single request. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateUpdatedImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export format (PNG is the default one). Please, refer to the export table from https:\/\/docs.aspose.cloud\/display\/imagingcloud\/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases."
                    },
                    {
                        "name": "newWidth",
                        "in": "query",
                        "description": "New width."
                    },
                    {
                        "name": "newHeight",
                        "in": "query",
                        "description": "New height."
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X position of start point for cropping rectangle."
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y position of start point for cropping rectangle."
                    },
                    {
                        "name": "rectWidth",
                        "in": "query",
                        "description": "Width of cropping rectangle."
                    },
                    {
                        "name": "rectHeight",
                        "in": "query",
                        "description": "Height of cropping rectangle."
                    },
                    {
                        "name": "rotateFlipMethod",
                        "in": "query",
                        "description": "RotateFlip method (Rotate180FlipNone, Rotate180FlipX, Rotate180FlipXY, Rotate180FlipY, Rotate270FlipNone, Rotate270FlipX, Rotate270FlipXY, Rotate270FlipY, Rotate90FlipNone, Rotate90FlipX, Rotate90FlipXY, Rotate90FlipY, RotateNoneFlipNone, RotateNoneFlipX, RotateNoneFlipXY, RotateNoneFlipY). Default is RotateNoneFlipNone."
                    },
                    {
                        "name": "outPath",
                        "in": "query",
                        "description": "Path to updated file (if this is empty, response contains streamed image)."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/create": {
            "post": {
                "summary": "Create new search context.",
                "description": "",
                "operationId": "CreateImageSearch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "detector",
                        "in": "query",
                        "description": "The image features detector."
                    },
                    {
                        "name": "matchingAlgorithm",
                        "in": "query",
                        "description": "The matching algorithm."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/status": {
            "get": {
                "summary": "Gets the search context status.",
                "description": "",
                "operationId": "GetImageSearchStatus",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}": {
            "delete": {
                "summary": "Deletes the search context.",
                "description": "",
                "operationId": "DeleteImageSearch",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/image2features": {
            "get": {
                "summary": "Extract features from image without adding to search context. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "ExtractImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/compare": {
            "post": {
                "summary": "Compare two images. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CompareImages",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId1",
                        "in": "query",
                        "description": "The first image Id in storage."
                    },
                    {
                        "name": "imageId2",
                        "in": "query",
                        "description": "The second image Id in storage or null (if image loading in request)."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/findSimilar": {
            "get": {
                "summary": "Find similar images. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "FindSimilarImages",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "similarityThreshold",
                        "in": "query",
                        "description": "The similarity threshold."
                    },
                    {
                        "name": "maxCount",
                        "in": "query",
                        "description": "The maximum count."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/findDuplicates": {
            "get": {
                "summary": "Find images duplicates.",
                "description": "",
                "operationId": "FindImageDuplicates",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "similarityThreshold",
                        "in": "query",
                        "description": "The similarity threshold."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/findByTags": {
            "post": {
                "summary": "Find images by tags. Tags JSON string is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "FindImagesByTags",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tags",
                        "in": "formData",
                        "description": "Tags array for searching"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "similarityThreshold",
                        "in": "query",
                        "description": "The similarity threshold."
                    },
                    {
                        "name": "maxCount",
                        "in": "query",
                        "description": "The maximum count."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/addTag": {
            "post": {
                "summary": "Add tag and reference image to search context. Image data is passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateImageTag",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "tagName",
                        "in": "query",
                        "description": "The tag."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/features\/web": {
            "post": {
                "summary": "Extract images features from web page and add them to search context",
                "description": "",
                "operationId": "CreateWebSiteImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imagesSource",
                        "in": "query",
                        "description": "Images source - a web page"
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/features": {
            "post": {
                "summary": "Extract images features and add them to search context. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "CreateImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "imagesFolder",
                        "in": "query",
                        "description": "Images source - a folder"
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Gets image features from search context.",
                "description": "",
                "operationId": "GetImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes image features from search context.",
                "description": "",
                "operationId": "DeleteImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update images features in search context. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "UpdateImageFeatures",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/ai\/imageSearch\/{searchContextId}\/image": {
            "get": {
                "summary": "Get image from search context",
                "description": "",
                "operationId": "GetSearchImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add image and images features to search context. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "AddSearchImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete image and images features from search context",
                "description": "",
                "operationId": "DeleteSearchImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update image and images features in search context. Image data may be passed as zero-indexed multipart\/form-data content or as raw body stream.",
                "description": "",
                "operationId": "UpdateSearchImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "imageData",
                        "in": "formData",
                        "description": "Input image"
                    },
                    {
                        "name": "searchContextId",
                        "in": "path",
                        "description": "The search context identifier."
                    },
                    {
                        "name": "imageId",
                        "in": "query",
                        "description": "The image identifier."
                    },
                    {
                        "name": "folder",
                        "in": "query",
                        "description": "Folder with image to process."
                    },
                    {
                        "name": "storage",
                        "in": "query",
                        "description": "Your Aspose Cloud Storage name."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/file\/{path}": {
            "get": {
                "summary": "Download file",
                "description": "",
                "operationId": "DownloadFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Upload file",
                "description": "",
                "operationId": "UploadFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "File",
                        "in": "formData",
                        "description": "File to upload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete file",
                "description": "",
                "operationId": "DeleteFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/file\/copy\/{srcPath}": {
            "put": {
                "summary": "Copy file",
                "description": "",
                "operationId": "CopyFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/file\/move\/{srcPath}": {
            "put": {
                "summary": "Move file",
                "description": "",
                "operationId": "MoveFile",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/folder\/{path}": {
            "get": {
                "summary": "Get all files and folders within a folder",
                "description": "",
                "operationId": "GetFilesList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create the folder",
                "description": "",
                "operationId": "CreateFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete folder",
                "description": "",
                "operationId": "DeleteFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "recursive",
                        "in": "query",
                        "description": "Enable to delete folders, subfolders and files"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/folder\/copy\/{srcPath}": {
            "put": {
                "summary": "Copy folder",
                "description": "",
                "operationId": "CopyFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/folder\/move\/{srcPath}": {
            "put": {
                "summary": "Move folder",
                "description": "",
                "operationId": "MoveFolder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "srcPath",
                        "in": "path",
                        "description": "Source file path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "destPath",
                        "in": "query",
                        "description": "Destination file path"
                    },
                    {
                        "name": "srcStorageName",
                        "in": "query",
                        "description": "Source storage name"
                    },
                    {
                        "name": "destStorageName",
                        "in": "query",
                        "description": "Destination storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/{storageName}\/exist": {
            "get": {
                "summary": "Check if storage exists",
                "description": "",
                "operationId": "StorageExists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storageName",
                        "in": "path",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/exist\/{path}": {
            "get": {
                "summary": "Check if file or folder exists",
                "description": "",
                "operationId": "ObjectExists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    },
                    {
                        "name": "versionId",
                        "in": "query",
                        "description": "File version ID to download"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/disc": {
            "get": {
                "summary": "Get disc usage",
                "description": "",
                "operationId": "GetDiscUsage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/imaging\/storage\/version\/{path}": {
            "get": {
                "summary": "Get file versions",
                "description": "",
                "operationId": "GetFileVersions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "path",
                        "in": "path",
                        "description": "File path e.g. \/folder\/file.ext"
                    },
                    {
                        "name": "storageName",
                        "in": "query",
                        "description": "Storage name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data stream.",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ImagingResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ImagingResponse": {
                "type": "object",
                "properties": {
                    "Height": {
                        "description": "Gets or sets the height of image.",
                        "type": "integer"
                    },
                    "Width": {
                        "description": "Gets or sets the width of image.",
                        "type": "integer"
                    },
                    "BitsPerPixel": {
                        "description": "Gets or sets the bits per pixel for image.",
                        "type": "integer"
                    },
                    "BmpProperties": {
                        "description": "Gets or sets the BMP properties.",
                        "type": ""
                    },
                    "GifProperties": {
                        "description": "Gets or sets the GIF properties.",
                        "type": ""
                    },
                    "JpegProperties": {
                        "description": "Gets or sets the JPEG properties.",
                        "type": ""
                    },
                    "PngProperties": {
                        "description": "Gets or sets the PNG properties.",
                        "type": ""
                    },
                    "TiffProperties": {
                        "description": "Gets or sets the TIFF properties.",
                        "type": ""
                    },
                    "PsdProperties": {
                        "description": "Gets or sets the PSD properties.",
                        "type": ""
                    },
                    "DjvuProperties": {
                        "description": "Gets or sets the DJVU properties.",
                        "type": ""
                    },
                    "WebPProperties": {
                        "description": "Gets or sets the WEBP properties.",
                        "type": ""
                    },
                    "Jpeg2000Properties": {
                        "description": "Gets or sets the JPEG2000 properties.",
                        "type": ""
                    },
                    "DicomProperties": {
                        "description": "Gets or sets the DICOM properties.",
                        "type": ""
                    },
                    "DngProperties": {
                        "description": "Gets or sets the DNG properties.",
                        "type": ""
                    },
                    "OdgProperties": {
                        "description": "Gets or sets the the ODG properties.",
                        "type": ""
                    },
                    "SvgProperties": {
                        "description": "Gets or sets the SVG properties.",
                        "type": ""
                    },
                    "HorizontalResolution": {
                        "description": "Gets or sets the horizontal resolution of an image.",
                        "type": "number"
                    },
                    "VerticalResolution": {
                        "description": "Gets or sets the vertical resolution of an image.",
                        "type": "number"
                    },
                    "IsCached": {
                        "description": "Gets or sets a value indicating whether image is cached.",
                        "type": "boolean"
                    }
                }
            },
            "BmpProperties": {
                "type": "object",
                "properties": {
                    "Compression": {
                        "description": "Gets or sets compression of bitmap.",
                        "type": "string"
                    }
                }
            },
            "GifProperties": {
                "type": "object",
                "properties": {
                    "BackgroundColor": {
                        "description": "Gets or sets the background color.",
                        "type": "string"
                    },
                    "HasBackgroundColor": {
                        "description": "Gets or sets a value indicating whether background color is used.",
                        "type": "boolean"
                    },
                    "HasTrailer": {
                        "description": "Gets or sets a value indicating whether image has trailer.",
                        "type": "boolean"
                    },
                    "PixelAspectRatio": {
                        "description": "Gets or sets the pixel aspect ratio.",
                        "type": "integer"
                    }
                }
            },
            "JpegProperties": {
                "type": "object",
                "properties": {
                    "Comment": {
                        "description": "Gets or sets the comment.",
                        "type": "string"
                    },
                    "JpegExifData": {
                        "description": "Gets or sets the JPEG EXIF data.",
                        "type": ""
                    },
                    "JpegJfifData": {
                        "description": "Gets or sets the JPEG JFIF data.",
                        "type": ""
                    }
                }
            },
            "PngProperties": {
                "type": "object"
            },
            "TiffProperties": {
                "type": "object",
                "properties": {
                    "Frames": {
                        "description": "Frames information.",
                        "type": "array"
                    },
                    "ByteOrder": {
                        "description": "Gets or sets the byte order.",
                        "type": "string"
                    },
                    "ExifData": {
                        "description": "Gets or sets the EXIF data.",
                        "type": ""
                    }
                }
            },
            "PsdProperties": {
                "type": "object",
                "properties": {
                    "BitsPerChannel": {
                        "description": "Gets or sets the bits per channel.",
                        "type": "integer"
                    },
                    "ChannelsCount": {
                        "description": "Gets or sets the channels count.",
                        "type": "integer"
                    },
                    "ColorMode": {
                        "description": "Gets or sets the color mode.",
                        "type": "string"
                    },
                    "Compression": {
                        "description": "Gets or sets compression of bitmap.",
                        "type": "string"
                    }
                }
            },
            "DjvuProperties": {
                "type": "object",
                "properties": {
                    "BackgroundColor": {
                        "description": "Gets or sets the background color.",
                        "type": "string"
                    },
                    "HasBackgroundColor": {
                        "description": "Gets or sets a value indicating whether background color is used.",
                        "type": "boolean"
                    },
                    "PagesCount": {
                        "description": "Gets or sets pages count.",
                        "type": "integer"
                    }
                }
            },
            "WebPProperties": {
                "type": "object",
                "properties": {
                    "Lossless": {
                        "description": "Gets or sets a value indicating whether these WebPOptions is lossless.",
                        "type": "boolean"
                    },
                    "Quality": {
                        "description": "Gets or sets the quality.",
                        "type": "number"
                    },
                    "AnimLoopCount": {
                        "description": "Gets or sets the animation loop count.",
                        "type": "integer"
                    },
                    "AnimBackgroundColor": {
                        "description": "Gets or sets the color of the animation background.",
                        "type": "integer"
                    }
                }
            },
            "Jpeg2000Properties": {
                "type": "object",
                "properties": {
                    "Comments": {
                        "description": "Gets or sets the JPEG comment markers.",
                        "type": "array"
                    },
                    "Codec": {
                        "description": "Gets or sets the JPEG2000 codec",
                        "type": "string"
                    }
                }
            },
            "DicomProperties": {
                "type": "object",
                "properties": {
                    "PlanarConfiguration": {
                        "description": "Gets or sets the planar configuration.",
                        "type": "integer"
                    },
                    "Reds": {
                        "description": "Gets or sets the array of red colors.",
                        "type": "string"
                    },
                    "Greens": {
                        "description": "Gets or sets the array of green colors.",
                        "type": "string"
                    },
                    "Blues": {
                        "description": "Gets or sets the array of blue colors.",
                        "type": "string"
                    },
                    "DicomHeaderInfoByBytes": {
                        "description": "Gets or sets the header information by bytes.",
                        "type": "string"
                    },
                    "SignedImage": {
                        "description": "Gets or sets a value indicating whether it's a signed image.",
                        "type": "boolean"
                    },
                    "DicomInfo": {
                        "description": "Gets or sets the header information of the DICOM file.",
                        "type": "array"
                    },
                    "SamplesPerPixel": {
                        "description": "Gets or sets the samples per pixel.",
                        "type": "integer"
                    },
                    "BitsAllocated": {
                        "description": "Gets or sets allocated bits count.",
                        "type": "integer"
                    },
                    "PhotoInterpretation": {
                        "description": "Gets or sets the photo interpretation.",
                        "type": "string"
                    },
                    "WidthTagFound": {
                        "description": "Gets or sets a value indicating whether width tag found.",
                        "type": "boolean"
                    },
                    "HeightTagFound": {
                        "description": "Gets or sets a value indicating whether height tag found.",
                        "type": "boolean"
                    },
                    "Width": {
                        "description": "Gets or sets the width of image.",
                        "type": "integer"
                    },
                    "Height": {
                        "description": "Gets or sets the height of image.",
                        "type": "integer"
                    },
                    "WindowCentre": {
                        "description": "Gets or sets the window centre.",
                        "type": "number"
                    },
                    "WindowWidth": {
                        "description": "Gets or sets the width of the window.",
                        "type": "number"
                    },
                    "PixelRepresentation": {
                        "description": "Gets or sets data representation of the pixel samples.",
                        "type": "integer"
                    },
                    "RescaleIntercept": {
                        "description": "Gets or sets a value of the rescale intercept.",
                        "type": "number"
                    },
                    "RescaleSlope": {
                        "description": "Gets or sets a value of the rescale slope.",
                        "type": "number"
                    },
                    "NumberOfFrames": {
                        "description": "Gets or sets the number of frames.",
                        "type": "integer"
                    },
                    "LengthValue": {
                        "description": "Gets or sets the length of element.",
                        "type": "integer"
                    },
                    "IsLittleEndian": {
                        "description": "Indicates if DICOM image has little endian byte order.",
                        "type": "boolean"
                    },
                    "Offset": {
                        "description": "Gets or sets the offset.",
                        "type": "integer"
                    },
                    "DicomFound": {
                        "description": "Gets or sets a value indicating whether \"DICOM\" data is found.",
                        "type": "boolean"
                    }
                }
            },
            "DngProperties": {
                "type": "object",
                "properties": {
                    "DngVersion": {
                        "description": "Gets or sets the DNG version.",
                        "type": "integer"
                    },
                    "Description": {
                        "description": "Gets or sets the description of colors (RGBG, RGBE, GMCY or GBTG).",
                        "type": "string"
                    },
                    "Model": {
                        "description": "Gets or sets the camera model.",
                        "type": "string"
                    },
                    "CameraManufacturer": {
                        "description": "Gets or sets the camera manufacturer.",
                        "type": "string"
                    },
                    "IsFoveon": {
                        "description": "Gets or sets the value indicating whether it's a Foveon matrix.",
                        "type": "integer"
                    },
                    "Software": {
                        "description": "Gets or sets the software.",
                        "type": "string"
                    },
                    "RawCount": {
                        "description": "Gets or sets the number of RAW images in file (0 means that the file has not been recognized).",
                        "type": "integer"
                    },
                    "Filters": {
                        "description": "Gets or sets the bit mask describing the order of color pixels in the matrix.",
                        "type": "integer"
                    },
                    "ColorsCount": {
                        "description": "Gets or sets the colors count.",
                        "type": "integer"
                    },
                    "XmpData": {
                        "description": "Gets or sets the XMP data.",
                        "type": "string"
                    },
                    "TranslationCfaDng": {
                        "description": "Gets or sets the translation array for CFA mosaic of DNG format.",
                        "type": "array"
                    }
                }
            },
            "OdgProperties": {
                "type": "object",
                "properties": {
                    "PageCount": {
                        "description": "Gets or sets the page count.",
                        "type": "integer"
                    },
                    "Metadata": {
                        "description": "Gets or sets the metadata.",
                        "type": ""
                    },
                    "Pages": {
                        "description": "Gets or sets the pages.",
                        "type": "array"
                    }
                }
            },
            "SvgProperties": {
                "type": "object",
                "properties": {
                    "ColorType": {
                        "description": "Gets or sets the color type for SVG image.",
                        "type": "string"
                    }
                }
            },
            "JpegExifData": {
                "type": "object"
            },
            "JpegJfifData": {
                "type": "object"
            },
            "ExifData": {
                "type": "object",
                "properties": {
                    "ApertureValue": {
                        "description": "Gets or sets the aperture.",
                        "type": "number"
                    },
                    "BodySerialNumber": {
                        "description": "Gets or sets the body serial number.",
                        "type": "string"
                    },
                    "BrightnessValue": {
                        "description": "Gets or sets the brightness.",
                        "type": "number"
                    },
                    "CFAPattern": {
                        "description": "Gets or sets the CFA pattern.",
                        "type": "string"
                    },
                    "CameraOwnerName": {
                        "description": "Gets or sets the camera owner name.",
                        "type": "string"
                    },
                    "ColorSpace": {
                        "description": "Gets or sets the color space.",
                        "type": "string"
                    },
                    "ComponentsConfiguration": {
                        "description": "Gets or sets the components configuration.",
                        "type": "string"
                    },
                    "CompressedBitsPerPixel": {
                        "description": "Gets or sets the compressed bits per pixel.",
                        "type": "number"
                    },
                    "Contrast": {
                        "description": "Gets or sets the contrast.",
                        "type": "string"
                    },
                    "CustomRendered": {
                        "description": "Gets or sets the value indincating if custom rendering is performed.",
                        "type": "string"
                    },
                    "DateTimeDigitized": {
                        "description": "Gets or sets date and time when image was digitized.",
                        "type": "string"
                    },
                    "DateTimeOriginal": {
                        "description": "Gets or sets date and time of the original image.",
                        "type": "string"
                    },
                    "DeviceSettingDescription": {
                        "description": "Gets or sets the device setting description.",
                        "type": "string"
                    },
                    "DigitalZoomRatio": {
                        "description": "Gets or sets the digital zoom ratio.",
                        "type": "number"
                    },
                    "ExifVersion": {
                        "description": "Gets or sets EXIF version.",
                        "type": "string"
                    },
                    "ExposureBiasValue": {
                        "description": "Gets or sets the exposure bias.",
                        "type": "number"
                    },
                    "ExposureIndex": {
                        "description": "Gets or sets the exposure index.",
                        "type": "number"
                    },
                    "ExposureMode": {
                        "description": "Gets or sets the exposure mode.",
                        "type": "string"
                    },
                    "ExposureProgram": {
                        "description": "Gets or sets the exposure program.",
                        "type": "string"
                    },
                    "ExposureTime": {
                        "description": "Gets or sets the exposure time.",
                        "type": "number"
                    },
                    "FNumber": {
                        "description": "Gets or sets the focal number.",
                        "type": "number"
                    },
                    "FileSource": {
                        "description": "Gets or sets the file source.",
                        "type": "string"
                    },
                    "Flash": {
                        "description": "Gets or sets the flash.",
                        "type": "string"
                    },
                    "FlashEnergy": {
                        "description": "Gets or sets the flash energy.",
                        "type": "number"
                    },
                    "FlashpixVersion": {
                        "description": "Gets or sets the Flashpix version.",
                        "type": "string"
                    },
                    "FocalLength": {
                        "description": "Gets or sets the focal length.",
                        "type": "number"
                    },
                    "FocalLengthIn35MmFilm": {
                        "description": "Gets or sets the focal length in 35mm film.",
                        "type": "integer"
                    },
                    "FocalPlaneResolutionUnit": {
                        "description": "Gets or sets the focal plane resolution unit.",
                        "type": "string"
                    },
                    "FocalPlaneXResolution": {
                        "description": "Gets or sets the focal plane X resolution.",
                        "type": "number"
                    },
                    "FocalPlaneYResolution": {
                        "description": "Gets or sets the focal plane Y resolution.",
                        "type": "number"
                    },
                    "GPSAltitude": {
                        "description": "Gets or sets the GPS altitude.",
                        "type": "number"
                    },
                    "GPSAltitudeRef": {
                        "description": "Gets or sets the GPS altitude reference (if it's above or below sea level).",
                        "type": "string"
                    },
                    "GPSAreaInformation": {
                        "description": "Gets or sets the GPS area information.",
                        "type": "string"
                    },
                    "GPSDOP": {
                        "description": "Gets or sets the GPS DOP (data degree of precision).",
                        "type": "number"
                    },
                    "GPSDestBearing": {
                        "description": "Gets or sets the GPS bearing of the destination.",
                        "type": "number"
                    },
                    "GPSDestBearingRef": {
                        "description": "Gets or sets the GPS reference unit for bearing of the destination.",
                        "type": "string"
                    },
                    "GPSDestDistance": {
                        "description": "Gets or sets the GPS destination distance.",
                        "type": "number"
                    },
                    "GPSDestDistanceRef": {
                        "description": "Gets or sets the GPS reference unit for destination distance.",
                        "type": "string"
                    },
                    "GPSDestLatitude": {
                        "description": "Gets or sets the GPS destination latitude.",
                        "type": "array"
                    },
                    "GPSDestLatitudeRef": {
                        "description": "Gets or sets the GPS reference destination latitude (north or south).",
                        "type": "string"
                    },
                    "GPSDestLongitude": {
                        "description": "Gets or sets the GPS destination longtitude.",
                        "type": "array"
                    },
                    "GPSDestLongitudeRef": {
                        "description": "Gets or sets the GPS reference destination longtitude (east or west).",
                        "type": "string"
                    },
                    "GPSDifferential": {
                        "description": "Gets or sets the GPS differential.",
                        "type": "integer"
                    },
                    "GPSImgDirection": {
                        "description": "Gets or sets the GPS image direction.",
                        "type": "number"
                    },
                    "GPSImgDirectionRef": {
                        "description": "Gets or sets the GPS reference image direction.",
                        "type": "string"
                    },
                    "GPSDateStamp": {
                        "description": "Gets or sets the GPS date stamp.",
                        "type": "string"
                    },
                    "GPSLatitude": {
                        "description": "Gets or sets the GPS latitude.",
                        "type": "array"
                    },
                    "GPSLatitudeRef": {
                        "description": "Gets or sets the GPS latitude reference (north or south).",
                        "type": "string"
                    },
                    "GPSLongitude": {
                        "description": "Gets or sets the GPS longitude.",
                        "type": "array"
                    },
                    "GPSLongitudeRef": {
                        "description": "Gets or sets the GPS longitude reference (east or west).",
                        "type": "string"
                    },
                    "GPSMapDatum": {
                        "description": "Gets or sets the geodetic survey data used by the GPS receiver.",
                        "type": "string"
                    },
                    "GPSMeasureMode": {
                        "description": "Gets or sets the GPS measure mode.",
                        "type": "string"
                    },
                    "GPSProcessingMethod": {
                        "description": "Gets or setsthe GPS processing method.",
                        "type": "string"
                    },
                    "GPSSatellites": {
                        "description": "Gets or sets the GPS satellites info.",
                        "type": "string"
                    },
                    "GPSSpeed": {
                        "description": "Gets or sets the GPS speed.",
                        "type": "number"
                    },
                    "GPSSpeedRef": {
                        "description": "Gets or sets the GPS speed reference unit.",
                        "type": "string"
                    },
                    "GPSStatus": {
                        "description": "Gets or sets the GPS status.",
                        "type": "string"
                    },
                    "GPSTimestamp": {
                        "description": "Gets or sets the GPS times tamp.",
                        "type": "array"
                    },
                    "GPSTrack": {
                        "description": "Gets or sets the GPS track.",
                        "type": "string"
                    },
                    "GPSTrackRef": {
                        "description": "Gets or sets the GPS track reference.",
                        "type": "string"
                    },
                    "GPSVersionID": {
                        "description": "Gets or sets the GPS version ID.",
                        "type": "string"
                    },
                    "GainControl": {
                        "description": "Gets or sets the gain control.",
                        "type": "string"
                    },
                    "Gamma": {
                        "description": "Gets or sets the gamma.",
                        "type": "number"
                    },
                    "ISOSpeed": {
                        "description": "Gets or sets the ISO speed.",
                        "type": "integer"
                    },
                    "ISOSpeedLatitudeYYY": {
                        "description": "Gets or sets the ISO speed latitude YYY value.",
                        "type": "integer"
                    },
                    "ISOSpeedLatitudeZZZ": {
                        "description": "Gets or sets the ISO speed latitude ZZZ value.",
                        "type": "integer"
                    },
                    "PhotographicSensitivity": {
                        "description": "Gets or sets the photographic sensitivity.",
                        "type": "integer"
                    },
                    "ImageUniqueID": {
                        "description": "Gets or sets the image unique ID.",
                        "type": "string"
                    },
                    "LensMake": {
                        "description": "Gets or sets the lens manufacturer.",
                        "type": "string"
                    },
                    "LensModel": {
                        "description": "Gets or sets the lens model.",
                        "type": "string"
                    },
                    "LensSerialNumber": {
                        "description": "Gets or sets the lens serial number.",
                        "type": "string"
                    },
                    "LensSpecification": {
                        "description": "Gets or sets the lens specification.",
                        "type": "array"
                    },
                    "LightSource": {
                        "description": "Gets or sets the light source.",
                        "type": "string"
                    },
                    "MakerNoteRawData": {
                        "description": "Gets or sets the maker note raw data.",
                        "type": "string"
                    },
                    "MaxApertureValue": {
                        "description": "Gets or sets the max aperture.",
                        "type": "number"
                    },
                    "MeteringMode": {
                        "description": "Gets or sets the metering mode.",
                        "type": "string"
                    },
                    "OECF": {
                        "description": "Gets or sets the OECF (Opto-Electric Conversion Function).",
                        "type": "string"
                    },
                    "PixelXDimension": {
                        "description": "Gets or sets the pixel X dimension.",
                        "type": "integer"
                    },
                    "PixelYDimension": {
                        "description": "Gets or sets the pixel Y dimension.",
                        "type": "integer"
                    },
                    "RecommendedExposureIndex": {
                        "description": "Gets or sets the recommended exposure index.",
                        "type": "integer"
                    },
                    "RelatedSoundFile": {
                        "description": "Gets or sets the related sound file.",
                        "type": "string"
                    },
                    "Saturation": {
                        "description": "Gets or sets the saturation.",
                        "type": "string"
                    },
                    "SceneCaptureType": {
                        "description": "Gets or sets the scene capture type.",
                        "type": "string"
                    },
                    "SceneType": {
                        "description": "Gets or sets the scene type.",
                        "type": "integer"
                    },
                    "SensingMethod": {
                        "description": "Gets or sets the sensing method.",
                        "type": "string"
                    },
                    "SensitivityType": {
                        "description": "Gets or sets the sensitivity type.",
                        "type": "integer"
                    },
                    "Sharpness": {
                        "description": "Gets or sets the sharpness.",
                        "type": "integer"
                    },
                    "ShutterSpeedValue": {
                        "description": "Gets or sets the shutter speed.",
                        "type": "number"
                    },
                    "SpatialFrequencyResponse": {
                        "description": "Gets or sets the spatial frequency response.",
                        "type": "string"
                    },
                    "SpectralSensitivity": {
                        "description": "Gets or sets the spectral sensitivity.",
                        "type": "string"
                    },
                    "StandardOutputSensitivity": {
                        "description": "Gets or sets the standard output sensitivity.",
                        "type": "integer"
                    },
                    "SubjectArea": {
                        "description": "Gets or sets the subject area.",
                        "type": "array"
                    },
                    "SubjectDistance": {
                        "description": "Gets or sets the subject distance.",
                        "type": "number"
                    },
                    "SubjectDistanceRange": {
                        "description": "Gets or sets the subject distance range.",
                        "type": "string"
                    },
                    "SubjectLocation": {
                        "description": "Gets or sets the subject location.",
                        "type": "array"
                    },
                    "SubsecTime": {
                        "description": "Gets or sets the fractions of seconds for the DateTime tag.",
                        "type": "string"
                    },
                    "SubsecTimeDigitized": {
                        "description": "Gets or sets the fractions of seconds for the DateTimeDigitized tag.",
                        "type": "string"
                    },
                    "SubsecTimeOriginal": {
                        "description": "Gets or sets the fractions of seconds for the DateTimeOriginal tag.",
                        "type": "string"
                    },
                    "UserComment": {
                        "description": "Gets or sets the user comment.",
                        "type": "string"
                    },
                    "WhiteBalance": {
                        "description": "Gets or sets the white balance.",
                        "type": "string"
                    },
                    "WhitePoint": {
                        "description": "Gets or sets the white point.",
                        "type": "array"
                    }
                }
            },
            "GPSDestLatitude": {
                "type": "array"
            },
            "GPSDestLongitude": {
                "type": "array"
            },
            "GPSLatitude": {
                "type": "array"
            },
            "GPSLongitude": {
                "type": "array"
            },
            "GPSTimestamp": {
                "type": "array"
            },
            "LensSpecification": {
                "type": "array"
            },
            "SubjectArea": {
                "type": "array"
            },
            "SubjectLocation": {
                "type": "array"
            },
            "WhitePoint": {
                "type": "array"
            },
            "JfifData": {
                "type": "object",
                "properties": {
                    "DensityUnits": {
                        "description": "Gets or sets the density units.",
                        "type": "string"
                    },
                    "Version": {
                        "description": "Gets or sets the version.",
                        "type": "integer"
                    },
                    "XDensity": {
                        "description": "Gets or sets the X density.",
                        "type": "integer"
                    },
                    "YDensity": {
                        "description": "Gets or sets the Y density.",
                        "type": "integer"
                    }
                }
            },
            "Frames": {
                "type": "array"
            },
            "TiffFrame": {
                "type": "object",
                "properties": {
                    "FrameOptions": {
                        "description": "Gets or sets options for the frame.",
                        "type": ""
                    },
                    "Height": {
                        "description": "Gets or sets the height of image.",
                        "type": "integer"
                    },
                    "Width": {
                        "description": "Gets or sets the width of image.",
                        "type": "integer"
                    },
                    "ExifData": {
                        "description": "Gets or sets the EXIF data.",
                        "type": ""
                    }
                }
            },
            "FrameOptions": {
                "type": "object"
            },
            "TiffOptions": {
                "type": "object",
                "properties": {
                    "IsValid": {
                        "description": "Gets or sets a value indicating whether TIFF image has valid data.",
                        "type": "boolean"
                    },
                    "Artist": {
                        "description": "Gets or sets the artist.",
                        "type": "string"
                    },
                    "ByteOrder": {
                        "description": "Gets or sets the byte order.",
                        "type": "string"
                    },
                    "BitsPerSample": {
                        "description": "Gets or sets the bits per sample.",
                        "type": "array"
                    },
                    "Compression": {
                        "description": "Gets or sets compression of bitmap.",
                        "type": "string"
                    },
                    "Copyright": {
                        "description": "Gets or sets the copyright info.",
                        "type": "string"
                    },
                    "ColorMap": {
                        "description": "Gets or sets the color map.",
                        "type": "array"
                    },
                    "DateTime": {
                        "description": "Gets or sets the date and time.",
                        "type": "string"
                    },
                    "DocumentName": {
                        "description": "Gets or sets the document name.",
                        "type": "string"
                    },
                    "AlphaStorage": {
                        "description": "Gets or sets the alpha storage.",
                        "type": "string"
                    },
                    "FillOrder": {
                        "description": "Gets or sets the fill order.",
                        "type": "string"
                    },
                    "HalfToneHints": {
                        "description": "Gets or sets the half-tone hints.",
                        "type": "array"
                    },
                    "ImageDescription": {
                        "description": "Gets or sets the image description.",
                        "type": "string"
                    },
                    "InkNames": {
                        "description": "Gets or sets the ink names.",
                        "type": "string"
                    },
                    "ScannerManufacturer": {
                        "description": "Gets or sets the scanner manufacturer.",
                        "type": "string"
                    },
                    "MaxSampleValue": {
                        "description": "Gets or sets the max sample value.",
                        "type": "array"
                    },
                    "MinSampleValue": {
                        "description": "Gets or sets the min sample value.",
                        "type": "array"
                    },
                    "ScannerModel": {
                        "description": "Gets or sets the scanner model.",
                        "type": "string"
                    },
                    "PageName": {
                        "description": "Gets or sets the page name.",
                        "type": "string"
                    },
                    "Orientation": {
                        "description": "Gets or sets the orientation.",
                        "type": "string"
                    },
                    "PageNumber": {
                        "description": "Gets or sets the page number.",
                        "type": "array"
                    },
                    "Photometric": {
                        "description": "Gets or sets the photometric interpretation.",
                        "type": "string"
                    },
                    "PlanarConfiguration": {
                        "description": "Gets or sets the planar configuration.",
                        "type": "string"
                    },
                    "ResolutionUnit": {
                        "description": "Gets or sets the resolution unit.",
                        "type": "string"
                    },
                    "RowsPerStrip": {
                        "description": "Gets or sets the rows per strip.",
                        "type": "integer"
                    },
                    "SampleFormat": {
                        "description": "Gets or sets the sample format.",
                        "type": "array"
                    },
                    "SamplesPerPixel": {
                        "description": "Gets or sets the samples per pixel.",
                        "type": "integer"
                    },
                    "SmaxSampleValue": {
                        "description": "Gets or sets the Smax sample value.",
                        "type": "array"
                    },
                    "SminSampleValue": {
                        "description": "Gets or sets the Smin sample value.",
                        "type": "array"
                    },
                    "SoftwareType": {
                        "description": "Gets or sets the software type.",
                        "type": "string"
                    },
                    "StripByteCounts": {
                        "description": "Gets or sets the strip byte counts.",
                        "type": "array"
                    },
                    "StripOffsets": {
                        "description": "Gets or sets the strip offsets.",
                        "type": "array"
                    },
                    "SubFileType": {
                        "description": "Gets or sets the subfile type.",
                        "type": "string"
                    },
                    "TargetPrinter": {
                        "description": "Gets or sets the target printer.",
                        "type": "string"
                    },
                    "Threshholding": {
                        "description": "Gets or sets the threshholding.",
                        "type": "string"
                    },
                    "TotalPages": {
                        "description": "Gets or sets the total pages count.",
                        "type": "integer"
                    },
                    "Xposition": {
                        "description": "Gets or sets the X position.",
                        "type": "number"
                    },
                    "Xresolution": {
                        "description": "Gets or sets the X resolution.",
                        "type": "number"
                    },
                    "Yposition": {
                        "description": "Gets or sets the Y position.",
                        "type": "number"
                    },
                    "Yresolution": {
                        "description": "Gets or sets the Y resolution.",
                        "type": "number"
                    },
                    "FaxT4Options": {
                        "description": "Gets or sets the FaxT4 Options.",
                        "type": "string"
                    },
                    "Predictor": {
                        "description": "Gets or sets the predictor (a mathematical operator that is applied to the image data before an encoding scheme is applied).",
                        "type": "string"
                    },
                    "ImageLength": {
                        "description": "Gets or sets the image length.",
                        "type": "integer"
                    },
                    "ImageWidth": {
                        "description": "Gets or sets the image width.",
                        "type": "integer"
                    },
                    "ValidTagCount": {
                        "description": "Gets or sets the valid tag count.",
                        "type": "integer"
                    },
                    "BitsPerPixel": {
                        "description": "Gets or sets the bits per pixel for image.",
                        "type": "integer"
                    }
                }
            },
            "BitsPerSample": {
                "type": "array"
            },
            "ColorMap": {
                "type": "array"
            },
            "HalfToneHints": {
                "type": "array"
            },
            "MaxSampleValue": {
                "type": "array"
            },
            "MinSampleValue": {
                "type": "array"
            },
            "PageNumber": {
                "type": "array"
            },
            "SampleFormat": {
                "type": "array"
            },
            "SmaxSampleValue": {
                "type": "array"
            },
            "SminSampleValue": {
                "type": "array"
            },
            "StripByteCounts": {
                "type": "array"
            },
            "StripOffsets": {
                "type": "array"
            },
            "Comments": {
                "type": "array"
            },
            "DicomInfo": {
                "type": "array"
            },
            "TranslationCfaDng": {
                "type": "array"
            },
            "Metadata": {
                "type": "object"
            },
            "Pages": {
                "type": "array"
            },
            "OdgMetadata": {
                "type": "object",
                "properties": {
                    "Generator": {
                        "description": "Gets or sets the generator.",
                        "type": "string"
                    },
                    "Title": {
                        "description": "Gets or sets the title.",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Gets or sets the description of colors (RGBG, RGBE, GMCY or GBTG).",
                        "type": "string"
                    },
                    "Subject": {
                        "description": "Gets or sets the subject.",
                        "type": "string"
                    },
                    "Keywords": {
                        "description": "Gets or sets the keywords.",
                        "type": "string"
                    },
                    "InitialCreator": {
                        "description": "Gets or sets the initial creator.",
                        "type": "string"
                    },
                    "Creator": {
                        "description": "Gets or sets the creator.",
                        "type": "string"
                    },
                    "PrintedBy": {
                        "description": "Gets or sets the \"PrintedBy\" record.",
                        "type": "string"
                    },
                    "CreationDateTime": {
                        "description": "Gets or sets the creation date and time.",
                        "type": "string"
                    },
                    "ModificationDateTime": {
                        "description": "Gets or sets the modification date and time.",
                        "type": "string"
                    },
                    "PrintDateTime": {
                        "description": "Gets or sets the print date and time.",
                        "type": "string"
                    },
                    "DocumentTemplate": {
                        "description": "Gets or sets the document template.",
                        "type": "string"
                    },
                    "AutomaticReload": {
                        "description": "Gets or sets the automatic reload.",
                        "type": "string"
                    },
                    "HyperlinkBehavior": {
                        "description": "Gets or sets the hyperlink behavior.",
                        "type": "string"
                    },
                    "Language": {
                        "description": "Gets or sets the language.",
                        "type": "string"
                    },
                    "EditingCycles": {
                        "description": "Gets or sets the editing cycles.",
                        "type": "string"
                    },
                    "EditingDuration": {
                        "description": "Gets or sets the duration of the editing.",
                        "type": "string"
                    },
                    "DocumentStatistics": {
                        "description": "Gets or sets the document statistics.",
                        "type": "string"
                    }
                }
            },
            "OdgPage": {
                "type": "object",
                "properties": {
                    "Width": {
                        "description": "Gets or sets the width of image.",
                        "type": "integer"
                    },
                    "Height": {
                        "description": "Gets or sets the height of image.",
                        "type": "integer"
                    }
                }
            },
            "FilterPropertiesBase": {
                "type": "object",
                "properties": {
                    "discriminator": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "BigRectangularFilterProperties": {
                "type": "object"
            },
            "SmallRectangularFilterProperties": {
                "type": "object"
            },
            "MedianFilterProperties": {
                "type": "object"
            },
            "GaussWienerFilterProperties": {
                "type": "object"
            },
            "DeconvolutionFilterProperties": {
                "type": "object"
            },
            "MotionWienerFilterProperties": {
                "type": "object"
            },
            "GaussianBlurFilterProperties": {
                "type": "object"
            },
            "ConvolutionFilterProperties": {
                "type": "object"
            },
            "SharpenFilterProperties": {
                "type": "object"
            },
            "BilateralSmoothingFilterProperties": {
                "type": "object"
            },
            "SearchContextStatus": {
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "Gets or sets the identifier.",
                        "type": "string"
                    },
                    "SearchStatus": {
                        "description": "Gets or sets the status.",
                        "type": "string"
                    }
                }
            },
            "ImageFeatures": {
                "type": "object",
                "properties": {
                    "ImageId": {
                        "description": "Gets the image identifier.",
                        "type": "string"
                    },
                    "FeaturesCount": {
                        "description": "Gets the features count.",
                        "type": "integer"
                    },
                    "FeatureLengthInBits": {
                        "description": "Gets the feature length in bits.",
                        "type": "integer"
                    },
                    "Features": {
                        "description": "Gets the features.",
                        "type": "string"
                    }
                }
            },
            "SearchResultsSet": {
                "type": "object",
                "properties": {
                    "Results": {
                        "description": "Gets the results.",
                        "type": "array"
                    }
                }
            },
            "Results": {
                "type": "array"
            },
            "SearchResult": {
                "type": "object",
                "properties": {
                    "ImageId": {
                        "description": "Gets the image identifier.",
                        "type": "string"
                    },
                    "Similarity": {
                        "description": "Gets or sets the similarity.",
                        "type": "number"
                    }
                }
            },
            "ImageDuplicatesSet": {
                "type": "object",
                "properties": {
                    "Duplicates": {
                        "description": "Gets the duplicate images.",
                        "type": "array"
                    }
                }
            },
            "Duplicates": {
                "type": "array"
            },
            "ImageDuplicates": {
                "type": "object",
                "properties": {
                    "DuplicateImages": {
                        "description": "Gets or sets the duplicate images.",
                        "type": "array"
                    }
                }
            },
            "DuplicateImages": {
                "type": "array"
            },
            "FilesUploadResult": {
                "type": "object",
                "properties": {
                    "Uploaded": {
                        "description": "List of uploaded file names",
                        "type": "array"
                    },
                    "Errors": {
                        "description": "List of errors.",
                        "type": "array"
                    }
                }
            },
            "Uploaded": {
                "type": "array"
            },
            "Errors": {
                "type": "array"
            },
            "Error": {
                "type": "object",
                "properties": {
                    "Code": {
                        "description": "Code\n            ",
                        "type": "string"
                    },
                    "Message": {
                        "description": "Message\n            ",
                        "type": "string"
                    },
                    "Description": {
                        "description": "Gets or sets the description of colors (RGBG, RGBE, GMCY or GBTG).",
                        "type": "string"
                    },
                    "InnerError": {
                        "description": "Inner Error\n            ",
                        "type": ""
                    }
                }
            },
            "InnerError": {
                "type": "object"
            },
            "ErrorDetails": {
                "type": "object",
                "properties": {
                    "RequestId": {
                        "description": "The request id",
                        "type": "string"
                    },
                    "Date": {
                        "description": "Date",
                        "type": "string"
                    }
                }
            },
            "FilesList": {
                "type": "object",
                "properties": {
                    "Value": {
                        "description": "Files and folders contained by folder StorageFile.",
                        "type": "array"
                    }
                }
            },
            "Value": {
                "type": "array"
            },
            "StorageFile": {
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "File or folder name.",
                        "type": "string"
                    },
                    "IsFolder": {
                        "description": "True if it is a folder.",
                        "type": "boolean"
                    },
                    "ModifiedDate": {
                        "description": "File or folder last modified DateTime.",
                        "type": "string"
                    },
                    "Size": {
                        "description": "File or folder size.",
                        "type": "integer"
                    },
                    "Path": {
                        "description": "File or folder path.",
                        "type": "string"
                    }
                }
            },
            "StorageExist": {
                "type": "object",
                "properties": {
                    "Exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    }
                }
            },
            "ObjectExist": {
                "type": "object",
                "properties": {
                    "Exists": {
                        "description": "Shows that the storage exists.\n            ",
                        "type": "boolean"
                    },
                    "IsFolder": {
                        "description": "True if it is a folder.",
                        "type": "boolean"
                    }
                }
            },
            "DiscUsage": {
                "type": "object",
                "properties": {
                    "UsedSize": {
                        "description": "Application used disc space.",
                        "type": "integer"
                    },
                    "TotalSize": {
                        "description": "Total disc space.",
                        "type": "integer"
                    }
                }
            },
            "FileVersions": {
                "type": "object",
                "properties": {
                    "Value": {
                        "description": "Files and folders contained by folder StorageFile.",
                        "type": "array"
                    }
                }
            },
            "FileVersion": {
                "type": "object"
            }
        }
    }
}